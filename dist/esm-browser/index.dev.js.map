{"version":3,"file":"index.dev.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACcA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAwBA;AAAA;AACA;AACA;AACA;AA4IA;AAEA;AACA;AAEA;AAEA;AACA;;;;;;;;;;;AChNA;;;;;;;;;;;;;;ACDA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACfA;AACA;AAYA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AA7EA;;;;;;;;;;;;;;;ACJA;AACA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAnBA;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AAFA;;;;;;;;;;;;;;;ACDA;AAEA;AAEA;AAFA;;;;;;;;;;;;;;;ACMA;AAEA;AAEA;AAFA;;;;;;;;;;;;;;;ACXA;AACA;AAUA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;;;;;;;;;;;;;;;ACbA;AAkBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1CA;AAOA;AAQA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AApLA;;;;;;;;;;;;;;;ACvBA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAaA;AAZA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAQA;AAGA;AAGA;AAIA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AACA;AAEA;AAIA;AACA;AAGA;AAIA;AACA;AAEA;AAIA;AACA;AAEA;AAIA;AACA;AAGA;AASA;AACA;AAEA;AASA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA1LA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;AACA;;;;AAEA;AAUA;AADA;;;;AAGA;AAGA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAMA;AAGA;AADA;;;;AAMA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAGA;AADA;;;AACA;AAEA;AAEA;AADA;;;AACA;AAEA;AAEA;AADA;;;AACA;AAEA;AAGA;AADA;;;;AAMA;AAEA;AADA;;;;AAMA;AAGA;AADA;;;;AAMA;AAEA;AADA;;;;AAMA;AAEA;AADA;;;;AAMA;AAGA;AADA;;;;AAWA;AAEA;AADA;;;;AAWA;AAEA;AADA;;;;AAGA;AAtMA;AAAA;;AAAA;AAPA;AADA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AAEA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAFA;AADA;;;;AAGA;AATA;AADA;;AACA;AARA;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAEA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;;AAFA;AADA;;;AACA;AAEA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AANA;AADA;;;;AAGA;AAEA;AADA;;;AACA;AAEA;AAbA;AAAA;;AAAA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;AACA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3DA;AADA;;;;AAGA;AAWA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAMA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AA7DA;AAAA;;AAAA;AAPA;AADA;AASA;AARA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBA;AADA;;;;AAGA;AATA;AAAA;;AAAA;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAEA;AACA;AAIA;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAjDA;AADA;;;;AAGA;AAOA;AADA;;AACA;;AAEA;AAoBA;AADA;;AACA;AAAA;AAEA;AAxCA;AADA;;AACA;AAVA;AAFA;AACA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;AAxBA;AAAA;;AAAA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AAGA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AA7DA;AADA;;;;AAGA;AAeA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAGA;AADA;;;;AAMA;AAGA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAEA;AADA;;;;AAGA;AAnEA;AAAA;;AAAA;AAPA;AADA;;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAFA;AADA;;;;AAGA;AATA;AADA;;AACA;AAPA;;;;;;;;;;;;;ACHA;;;AAIA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4EA;;;;;;;;;;;;;;;AC5JA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;;AAEA;AACA;AAKA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAGA;AAAA;AACA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAGA;AAAA;AACA;AACA;AACA;AA9BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AAGA;AAAA;AACA;AACA;AACA;AA9BA;;;;;;;;;;;;;;;AC1JA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;AAMA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;;;;;;;;;;;;;;;ACyDA;AAAA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAoEA;;;;;;;;;;;;;;;ACrLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAiMA;AAhMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA1EA;AA4EA;AAoEA;AAnEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAoCA;AAjCA;AAkCA;AA9BA;AAgCA;AA9BA;AAEA;AACA;AA0BA;AAxBA;AA0BA;AAxBA;AAyBA;AAnBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAUA;;;;;;;;;;;;;;;AC/MA;AACA;AAEA;;;;AAIA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAKA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;ACnBA;;;;;;AAMA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AAzBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACjDA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;AArDA;;;;;;;;;;;;;;ACXA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;;;;;;;;;;;;;;ACPA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;ACzCA;AACA;AACA;AAIA;AAIA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4EA;AA1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4CA;AA1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;;;;;;;;;;;;;;;ACrHA;AAQA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAvLA;AA0LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;;;;;;;;;;;;;;ACtPA;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAhBA;;;;;;;;;;;;;;;ACJA;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AAoCA;AAnCA;AAoCA;AAnCA;AA+BA;AA9BA;AAmCA;AACA;AACA;AAhCA;AAiCA;AACA;AA9BA;AA+BA;AA9BA;AA+BA;AA9BA;AA+BA;AA9BA;AAmCA;AAlCA;AA8BA;AA7BA;AA8BA;AACA;AACA;AA/BA;AAiCA;AACA;AAjCA;AAkCA;AAAA;AAGA;;;;;;;;;;;;ACpEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEPA;AACA;AACA;AACA","sources":["webpack://command-flow/webpack/universalModuleDefinition","webpack://command-flow/./src/Bridge/ConfigTypes.ts","webpack://command-flow/./src/Bridge/Difference/index.ts","webpack://command-flow/./src/Bridge/Index.ts","webpack://command-flow/./src/Bridge/Platform/BasePlatform.ts","webpack://command-flow/./src/Bridge/Platform/Hardware.ts","webpack://command-flow/./src/Bridge/Platform/Node/Mobile.ts","webpack://command-flow/./src/Bridge/Platform/Node/PC.ts","webpack://command-flow/./src/Bridge/Platform/Web/Mobile.ts","webpack://command-flow/./src/Bridge/Platform/Web/PC.ts","webpack://command-flow/./src/Bridge/Platform/Web/WebBase.ts","webpack://command-flow/./src/Configs/index.ts","webpack://command-flow/./src/Context.ts","webpack://command-flow/./src/Object/Able/ObjectAble.ts","webpack://command-flow/./src/Object/Able/Targets/ArrayObject.ts","webpack://command-flow/./src/Object/Able/Targets/BooleanObject.ts","webpack://command-flow/./src/Object/Able/Targets/DataObject.ts","webpack://command-flow/./src/Object/Able/Targets/DateObject.ts","webpack://command-flow/./src/Object/Able/Targets/MapObject.ts","webpack://command-flow/./src/Object/Able/Targets/NullObject.ts","webpack://command-flow/./src/Object/Able/Targets/NumberObject.ts","webpack://command-flow/./src/Object/Able/Targets/ObjectTarget.ts","webpack://command-flow/./src/Object/Able/Targets/SetObject.ts","webpack://command-flow/./src/Object/Able/Targets/StringObject.ts","webpack://command-flow/./src/Object/Control.ts","webpack://command-flow/./src/Object/util.ts","webpack://command-flow/./src/Object/valueUtil.ts","webpack://command-flow/./src/Types.ts","webpack://command-flow/./src/Util/Equipment.ts","webpack://command-flow/./src/Util/channel-value-util.ts","webpack://command-flow/./src/Util/tools.ts","webpack://command-flow/./src/Works/ExtendsWorks/Base64Work.ts","webpack://command-flow/./src/Works/ExtendsWorks/BeginWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/FetchWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/LoadFileWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/OpenURLWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/QRCodeWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/RunCommandWork.ts","webpack://command-flow/./src/Works/ExtendsWorks/UtilWork.ts","webpack://command-flow/./src/Works/Instruction.ts","webpack://command-flow/./src/Works/WorkUnit.ts","webpack://command-flow/./src/index.ts","webpack://command-flow/external umd \"axios\"","webpack://command-flow/external umd \"js-base64\"","webpack://command-flow/external umd \"qrcode-generator\"","webpack://command-flow/external umd \"rxjs\"","webpack://command-flow/external umd \"rxjs/operators\"","webpack://command-flow/external umd \"uuid\"","webpack://command-flow/webpack/bootstrap","webpack://command-flow/webpack/runtime/global","webpack://command-flow/webpack/before-startup","webpack://command-flow/webpack/startup","webpack://command-flow/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"rxjs\"), require(\"qrcode-generator\"), require(\"axios\"), require(\"uuid\"), require(\"rxjs/operators\"), require(\"js-base64\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"rxjs\", \"qrcode-generator\", \"axios\", \"uuid\", \"rxjs/operators\", \"js-base64\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"rxjs\"), require(\"qrcode-generator\"), require(\"axios\"), require(\"uuid\"), require(\"rxjs/operators\"), require(\"js-base64\")) : factory(root[\"rxjs\"], root[\"qrcode-generator\"], root[\"axios\"], root[\"uuid\"], root[\"rxjs/operators\"], root[\"js-base64\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE_rxjs__, __WEBPACK_EXTERNAL_MODULE_qrcode_generator__, __WEBPACK_EXTERNAL_MODULE_axios__, __WEBPACK_EXTERNAL_MODULE_uuid__, __WEBPACK_EXTERNAL_MODULE_rxjs_operators__, __WEBPACK_EXTERNAL_MODULE_js_base64__) => {\nreturn ","import { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { Observable } from \"rxjs\";\r\nimport { BooleanObject, StringObject } from \"../Object/Able/ObjectAble\";\r\nimport { Value } from \"../Types\";\r\n\r\nexport interface RunTimeInfo {\r\n  name: string;\r\n  platform: any;\r\n}\r\n\r\nexport type PathLike = string | URL;\r\nexport interface CommandStatus {\r\n  command: string;\r\n  status: boolean;\r\n  error?: Error;\r\n  result?: string;\r\n}\r\n\r\nexport interface QRcodeOption {\r\n  type: TypeNumber;\r\n  Level: ErrorCorrectionLevel;\r\n  SideLength: number;\r\n}\r\n\r\nexport enum FileType {\r\n  Audio = \"audio/*\",\r\n  Video = \"video/*\",\r\n  HTML = \"text/html\",\r\n  Txt = \"text/plain\",\r\n  Image = \"image/*\",\r\n  Csv = \".csv\",\r\n  Pdf = \"application/pdf\",\r\n  Word = \"application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/msword，application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n  All = \"*\",\r\n}\r\nexport interface FileOption {\r\n  type: FileType;\r\n}\r\nexport interface FileLoadEvent {\r\n  total: number;\r\n  loaded: number;\r\n  data: ArrayBuffer;\r\n  finish: boolean;\r\n  file?: File,\r\n}\r\n\r\nexport interface RequestTimeOut {\r\n  timeout: number;\r\n}\r\nexport declare type RequestMethod = \"GET\" | \"POST\" | \"PUT\" | \"OPTIONS\" | \"DELETE\";\r\nexport interface RequestParamsInit {\r\n  headers?: { [key: string]: any };\r\n  method?: RequestMethod;\r\n  timeout?: number;\r\n  data?: any;\r\n  url: string;\r\n}\r\nexport type RequestParams = AxiosRequestConfig\r\nexport enum SupportContentType {\r\n  JSON = \"application/json\",\r\n  TEXT = \"text/plain\",\r\n}\r\nexport interface ResponseContent {\r\n  error?: Error;\r\n  data?: any;\r\n  response: AxiosResponse;\r\n}\r\n\r\n/**\r\n * 硬件驱动部分\r\n */\r\nexport namespace Hardware {\r\n  // 拍照\r\n  // 视频\r\n  // 相片\r\n  // 地理位置\r\n  // 录音\r\n  // 文件\r\n  // 震动 =>手机\r\n  // 传感器\r\n  // 调节/获取音量 =>手机 \r\n  // 调节/获取亮度 =>手机 \r\n  // 系统信息\r\n  // 蓝牙状态/开关/发送数据/监听/关闭\r\n  // 语音播放文字\r\n  export type DataString = string;\r\n  export interface ImageResponse {\r\n    image: DataString;\r\n    error?: Error;\r\n  }\r\n  export interface TakePhotoOption { }\r\n\r\n  export interface VideoOption { }\r\n  export interface VideoResponse {\r\n    videoUrl?: string;\r\n    error?: Error;\r\n  }\r\n  export interface PositionResponse {\r\n    longitude?: number;\r\n    latitude?: number;\r\n    accuracy?: number;\r\n  }\r\n  export interface PositionOption { }\r\n  export interface AudioResponse { }\r\n\r\n  export interface VibratorOption { }\r\n  export interface BluetoothDevice { }\r\n  export interface SpeechOption { }\r\n  export interface SpeechResponse { }\r\n\r\n  export interface Permission {\r\n    // 权限处理\r\n  }\r\n  export interface PlatformDrive extends Permission {\r\n    // 拍照\r\n    takePhoto(option: TakePhotoOption): Promise<ImageResponse>;\r\n    // 视频\r\n    recordVideo(option: VideoOption): Promise<VideoResponse>;\r\n\r\n    // 相片\r\n    getPhotos(): Promise<Array<ImageResponse>>;\r\n\r\n    // 地理位置\r\n    getCurrentPosition(): Promise<PositionResponse>;\r\n    watchPosition(option: PositionOption): Observable<PositionResponse>;\r\n    closePosition(): Promise<boolean>;\r\n\r\n    // 录音\r\n    recordAudio(): Promise<AudioResponse>;\r\n    stopAudio(): Promise<Boolean>;\r\n\r\n    // 文件\r\n    getFile(option: any): Promise<any>;\r\n\r\n    // start 震动\r\n    startVibrator(option: VibratorOption): Promise<Boolean>;\r\n    stopVibrator(): Promise<Boolean>;\r\n\r\n    //传感器 距离传感器 加速度传感器 陀螺仪 磁力计\r\n\r\n    // 系统信息\r\n    getSystemInfo(): Promise<RunTimeInfo>;\r\n\r\n    //音量\r\n    getVolume(): Promise<number>;\r\n    setVolume(volume: number): Promise<Boolean>;\r\n\r\n    //亮度\r\n    getBrightness(): Promise<number>;\r\n    setBrightness(brightness: number): Promise<Boolean>;\r\n\r\n    //蓝牙\r\n    scanBluetooth(): Promise<Array<BluetoothDevice>>;\r\n    connectBluetooth(device: BluetoothDevice): Promise<Boolean>;\r\n    bluetoothSendData(data: String): Promise<Boolean>;\r\n    bluetoothReceiveData(device: BluetoothDevice): Observable<String>;\r\n    bluetoothClose(device: BluetoothDevice): Promise<Boolean>;\r\n\r\n    //语音\r\n    speechInit(option: SpeechOption): Promise<Boolean>;\r\n    speak(text: string): Promise<SpeechResponse>;\r\n    stopSpeak(): Promise<SpeechResponse>;\r\n    clearSpeech(): Promise<Boolean>;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport declare interface PlatformBridgeAble extends Hardware.PlatformDrive {\r\n  // // 硬件相关\r\n  // hardwareSource?: Hardware.PlatformDrive;\r\n\r\n  //计算机运行相关硬件\r\n  loadRunInfo(): Observable<RunTimeInfo>;\r\n  //命令行工具\r\n  /***\r\n   * 运行一个脚本 path\r\n   * 运行 javascript\r\n   */\r\n  runCommand(command: string, option?: any): Observable<CommandStatus>;\r\n\r\n  //计算机操作\r\n  open(url: String, option?: any): Observable<BooleanObject>;\r\n\r\n  //文件相关\r\n  loadFile(\r\n    url: PathLike,\r\n    option?: FileOption\r\n  ): Observable<Value.ObjectAble<FileLoadEvent>>;\r\n\r\n  // 工具\r\n  createQrCode(\r\n    context: String,\r\n    option?: QRcodeOption\r\n  ): Observable<StringObject>;\r\n\r\n  // 网络\r\n  // 仅仅支持json/txt\r\n  fetch(req: AxiosRequestConfig): Observable<Value.ObjectAble<ResponseContent>>;\r\n}\r\n\r\n// export interface BasePlatformBridgeAble extends PlatformBridgeAble { }\r\n\r\n// export interface WebBridgeAble extends BasePlatformBridgeAble { }\r\n// export interface NodejsBridgeAble extends BasePlatformBridgeAble { }\r\n\r\n// export interface MobilePlatformBridgeAble extends PlatformBridgeAble { }\r\n\r\n// export interface MobileWebBridgeAble extends MobilePlatformBridgeAble { }\r\n// export interface MobileNodejsBridgeAble extends MobilePlatformBridgeAble { }\r\n","\r\n// import './Fetch/index'","import { isElectron, isPC, PlatformSelect } from \"../Util/Equipment\";\r\nimport { PlatformBridge } from \"./Platform/BasePlatform\";\r\nimport { MobileNodejsBridge } from \"./Platform/Node/Mobile\";\r\nimport { PCNodejsBridge } from \"./Platform/Node/PC\";\r\nimport { MobileWebBridge } from \"./Platform/Web/Mobile\";\r\nimport { PCWebBridge } from \"./Platform/Web/PC\";\r\nimport './Difference/index';\r\n\r\nconst runConfig = PlatformSelect({\r\n  web: { pc: PCWebBridge, mobile: MobileWebBridge },\r\n  node: { pc: PCNodejsBridge, mobile: MobileNodejsBridge },\r\n  electron: {},\r\n});\r\nconst Target = runConfig[isElectron ? \"electron\" : isPC ? \"pc\" : \"mobile\"];\r\nconst Platform: PlatformBridge = new Target();\r\nexport default Platform;\r\n","import { async, Observable, of, Subscriber } from \"rxjs\";\r\nimport { BooleanObject, StringObject, ObjectTarget } from \"../../Object/Able/ObjectAble\";\r\nimport {\r\n  CommandStatus,\r\n  FileLoadEvent,\r\n  FileOption,\r\n  PathLike,\r\n  PlatformBridgeAble,\r\n  QRcodeOption,\r\n  RunTimeInfo,\r\n  ResponseContent,\r\n  Hardware,\r\n} from \"../ConfigTypes\";\r\nimport * as QRCode from \"qrcode-generator\";\r\nimport { Value } from \"../../Types\";\r\nimport Axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\nimport { HardwareBase } from \"./Hardware\";\r\n\r\nexport class PlatformBridge extends HardwareBase implements PlatformBridgeAble {\r\n  createQrCode(\r\n    context: String,\r\n    option?: QRcodeOption\r\n  ): Observable<StringObject> {\r\n    return new Observable((sub: Subscriber<StringObject>) => {\r\n      let width = option?.SideLength ?? 200;\r\n      let margin = 2;\r\n      const qrcode = QRCode(option?.type || 4, option?.Level || \"H\");\r\n      qrcode.addData((context ?? \"\") as string);\r\n      qrcode.make();\r\n      const moduleCount = qrcode.getModuleCount();\r\n      const cellSize = (width - margin * 2) / moduleCount;\r\n      const base64 = qrcode.createDataURL(cellSize, margin);\r\n      // const base64 = qrcode.createDataURL(cellSize, margin).replace('data:image/gif;base64', 'data:image/png;base64');\r\n      sub.next(new StringObject(base64));\r\n      sub.complete();\r\n      return {\r\n        unsubscribe: () => sub.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n  loadRunInfo(): Observable<RunTimeInfo> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  runCommand(command: string, option?: any): Observable<CommandStatus> {\r\n    return new Observable((subscriber) => {\r\n      let result = null;\r\n      let error = null;\r\n      let status = false;\r\n      try {\r\n        result = eval(command?.toString())\r\n        status = true;\r\n      } catch (_error) {\r\n        error = _error;\r\n        status = false;\r\n      } finally {\r\n        subscriber.next({\r\n          result,\r\n          status,\r\n          error,\r\n          command\r\n        })\r\n        subscriber.complete()\r\n      }\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe()\r\n      }\r\n    })\r\n  }\r\n  open(url: String, option?: any): Observable<BooleanObject> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  loadFile(\r\n    url: PathLike,\r\n    option?: FileOption\r\n  ): Observable<Value.ObjectAble<FileLoadEvent>> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  fetch(req: AxiosRequestConfig): Observable<Value.ObjectAble<ResponseContent>> {\r\n    return new Observable((subscriber) => {\r\n      Axios.request(req)\r\n        .then((response: AxiosResponse) => {\r\n          let error = null;\r\n          let data = null;\r\n          const content = {} as ResponseContent\r\n          if (response.status !== 200) {\r\n            error = new Error(`${response.status} ${response.statusText}`);\r\n          } else {\r\n            data = response.data\r\n          }\r\n          content.data = data;\r\n          content.error = error;\r\n          content.response = response;\r\n          subscriber.next(new ObjectTarget(content));\r\n          subscriber.complete()\r\n        })\r\n        .catch((error) => {\r\n          subscriber.error(error)\r\n        })\r\n      return {\r\n        unsubscribe: () => {\r\n          subscriber.unsubscribe();\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Observable } from \"rxjs\";\r\nimport { Hardware, RunTimeInfo } from \"../ConfigTypes\";\r\n\r\n\r\nexport class HardwareBase implements Hardware.PlatformDrive {\r\n  takePhoto(option: Hardware.TakePhotoOption): Promise<Hardware.ImageResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  recordVideo(option: Hardware.VideoOption): Promise<Hardware.VideoResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getPhotos(): Promise<Hardware.ImageResponse[]> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getCurrentPosition(): Promise<Hardware.PositionResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  watchPosition(option: Hardware.PositionOption): Observable<Hardware.PositionResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  closePosition(): Promise<boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  recordAudio(): Promise<Hardware.AudioResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  stopAudio(): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getFile(option: any): Promise<any> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  startVibrator(option: Hardware.VibratorOption): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  stopVibrator(): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getSystemInfo(): Promise<RunTimeInfo> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getVolume(): Promise<number> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  setVolume(volume: number): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  getBrightness(): Promise<number> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  setBrightness(brightness: number): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  scanBluetooth(): Promise<Hardware.BluetoothDevice[]> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  connectBluetooth(device: Hardware.BluetoothDevice): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  bluetoothSendData(data: String): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  bluetoothReceiveData(device: Hardware.BluetoothDevice): Observable<String> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  bluetoothClose(device: Hardware.BluetoothDevice): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  speechInit(option: Hardware.SpeechOption): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  speak(text: string): Promise<Hardware.SpeechResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  stopSpeak(): Promise<Hardware.SpeechResponse> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  clearSpeech(): Promise<Boolean> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n}","import { Observable, of } from \"rxjs\";\r\nimport { BooleanObject, ObjectTarget } from \"../../../Object/Able/ObjectAble\";\r\nimport { Value } from \"../../../Types\";\r\nimport {\r\n  PathLike,\r\n  FileLoadEvent,\r\n  FileOption,\r\n} from \"../../ConfigTypes\";\r\nimport { PlatformBridge } from \"../BasePlatform\";\r\n\r\nexport class MobileNodejsBridge\r\n  extends PlatformBridge {\r\n  open(url: string): Observable<BooleanObject> {\r\n    return of(new BooleanObject(false));\r\n  }\r\n  loadFile(\r\n    url: PathLike,\r\n    option?: FileOption\r\n  ): Observable<Value.ObjectAble<FileLoadEvent>> {\r\n    return of(\r\n      new ObjectTarget<FileLoadEvent>({\r\n        total: 0,\r\n        loaded: 0,\r\n        data: new ArrayBuffer(0),\r\n        finish: true,\r\n        file: null,\r\n      })\r\n    );\r\n  }\r\n}\r\n","\r\nimport { PlatformBridge } from \"../BasePlatform\";\r\nexport class PCNodejsBridge\r\n  extends PlatformBridge {\r\n}\r\n","\r\nimport { WebBridge } from \"./WebBase\";\r\n\r\nexport class MobileWebBridge\r\n  extends WebBridge {\r\n}\r\n","import { Observable, of } from \"rxjs\";\r\nimport { BooleanObject, ObjectTarget } from \"../../../Object/Able/ObjectAble\";\r\nimport { Value } from \"../../../Types\";\r\nimport {\r\n  FileLoadEvent,\r\n  FileOption,\r\n  PathLike,\r\n} from \"../../ConfigTypes\";\r\nimport { PlatformBridge } from \"../BasePlatform\";\r\nimport { WebBridge } from \"./WebBase\";\r\n\r\nexport class PCWebBridge extends WebBridge {\r\n\r\n}","import { Observable, of } from \"rxjs\";\r\nimport {\r\n  BooleanObject,\r\n  ObjectTarget,\r\n} from \"../../../Object/Able/ObjectAble\";\r\nimport { Value } from \"../../../Types\";\r\nimport {\r\n  PathLike,\r\n  FileLoadEvent,\r\n  FileOption,\r\n} from \"../../ConfigTypes\";\r\nimport { PlatformBridge } from \"../BasePlatform\";\r\n\r\nexport class WebBridge\r\n  extends PlatformBridge {\r\n  open(url: string): Observable<BooleanObject> {\r\n    const result = window.open(url, \"__blank\");\r\n    return of(new BooleanObject(result !== null));\r\n  }\r\n  /**\r\n   * 打开文件路径\r\n   * @param url \r\n   * @param option \r\n   * @returns \r\n   */\r\n  loadFile(\r\n    url: PathLike,\r\n    option?: FileOption\r\n  ): Observable<Value.ObjectAble<FileLoadEvent>> {\r\n    return new Observable((subscriber) => {\r\n      const input = document.createElement(\"input\");\r\n      //input.value = url.toString();\r\n      input.type = \"file\";\r\n      input.id = \"_temp_input_select\";\r\n      input.accept = option?.type || \"*\";\r\n      input.style.display = \"none\";\r\n      document.body.append(input);\r\n      input.addEventListener(\"change\", (_) => {\r\n        const reader = new FileReader();\r\n        const file = input.files[0];\r\n        reader.onprogress = (info: ProgressEvent) => {\r\n          const { total, loaded } = info;\r\n          const data = reader.result as ArrayBuffer;\r\n          subscriber.next(\r\n            new ObjectTarget<FileLoadEvent>({\r\n              total,\r\n              loaded,\r\n              data: data,\r\n              finish: false,\r\n              file\r\n            })\r\n          );\r\n        };\r\n        reader.onload = (info: ProgressEvent) => {\r\n          const data = reader.result as ArrayBuffer;\r\n          const { total, loaded } = info;\r\n          subscriber.next(\r\n            new ObjectTarget<FileLoadEvent>({ total, loaded, data, finish: true, file })\r\n          );\r\n          subscriber.complete();\r\n        };\r\n        reader.onerror = (ev: ProgressEvent<FileReader>) => {\r\n          subscriber.error(ev);\r\n        }\r\n        reader.readAsArrayBuffer(file);\r\n      });\r\n      input.click();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { FileOption, FileType, QRcodeOption, RequestParamsInit } from \"../Bridge/ConfigTypes\";\r\n\r\n// 整体运行配置\r\ntype WorkName = string\r\n// Work 运行过程中可以配置的选项\r\nexport type RunCommandWorkConfig = { [key: WorkName]: any }\r\nexport declare interface WorkRunOption {\r\n  RunCommandWork: RunCommandWorkConfig;\r\n  QRCodeWork: QRcodeOption,\r\n  LoadFileWork: FileOption,\r\n  FetchWork: RequestParamsInit\r\n}\r\nexport declare interface Environment { }\r\nexport declare interface ContextRunOption {\r\n  development: boolean;\r\n  environment?: Environment,\r\n  workConfig?: WorkRunOption,\r\n}\r\n/**\r\n * 默认的配置\r\n */\r\nexport const DefaultRunConfig = {\r\n  development: true,\r\n  environment: {},\r\n  workConfig: {\r\n    QRCodeWork: {\r\n      type: 4,\r\n      Level: \"H\",\r\n      SideLength: 100,\r\n    } as QRcodeOption,\r\n    RunCommandWork: {\r\n      input: '$I$',\r\n    },\r\n    LoadFileWork: {\r\n      type: FileType.All\r\n    },\r\n    FetchWork: {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n      },\r\n    },\r\n  },\r\n}","import {\r\n  WorkType,\r\n  BaseType,\r\n  ContextImpl,\r\n  ChannelObject,\r\n  ChannelValue,\r\n} from './Types';\r\nimport {\r\n  zip,\r\n  forkJoin,\r\n  Observable,\r\n  PartialObserver,\r\n  Subject,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport { ContextRunOption, DefaultRunConfig } from './Configs';\r\nimport { BooleanObject, ObjectTarget } from './Object/Able/ObjectAble';\r\nimport Platform from './Bridge/Index';\r\nimport { Value } from './Types';\r\nimport { PlatformBridge } from './Bridge/Platform/BasePlatform';\r\nimport { BeginWork } from './Works/ExtendsWorks/BeginWork';\r\nimport { decide } from './Object/valueUtil';\r\nimport { take } from 'rxjs/operators';\r\n\r\nexport class Context implements ContextImpl {\r\n  status: WorkType.WorkRunStatus = WorkType.WorkRunStatus.INIT;\r\n  platform: PlatformBridge = Platform;\r\n  /**\r\n   * 运行配置文件 todo\r\n   */\r\n  runOptions: ContextRunOption;\r\n  /**\r\n   * 上下文变量\r\n   */\r\n  runConstant: Map<WorkType.WorkUUID, WorkType.WorkConstant> = new Map();\r\n  /**\r\n   * 所有work\r\n   */\r\n  works: WorkType.Work[] = [];\r\n  /**\r\n   * 消息传输通道\r\n   */\r\n  msgChannel: Subject<WorkType.WorkStatus> = new Subject();\r\n  constructor(runOptions?: ContextRunOption) {\r\n    this.runOptions = (runOptions || DefaultRunConfig) as ContextRunOption;\r\n    const sub = this.msgChannel.subscribe({\r\n      next: (value) => this.workMessage(value),\r\n      error: (error) => this.workError(error),\r\n    });\r\n    this.pools.push(sub);\r\n    this.addWork(new BeginWork());\r\n  }\r\n  /**\r\n   * 需要销毁的Subscription\r\n   */\r\n  pools: Subscription[] = [];\r\n\r\n  /**\r\n   * 增加上下文变量\r\n   * @param from\r\n   * @param name\r\n   * @param value\r\n   */\r\n  addVariable(from: WorkType.Work, name: string, value: BaseType): void {\r\n    const w_map = this.runConstant.get(from.uuid);\r\n    !w_map && this.runConstant.set(from.uuid, new Map());\r\n    this.runConstant.get(from.uuid).set(name, value);\r\n  }\r\n  workMessage(input: WorkType.WorkStatus) {\r\n    console.log('msgChannel', input);\r\n  }\r\n  workError(error: Error) {\r\n    console.log('msgChannelError', error);\r\n    this.stopWorkChain();\r\n  }\r\n\r\n  addWorkLog(tap: PartialObserver<WorkType.WorkStatus>): Subscription {\r\n    return this.msgChannel.subscribe(tap);\r\n  }\r\n\r\n  sendLog(status: WorkType.WorkStatus) {\r\n    const log = {\r\n      date: new Date(),\r\n      work: status.work.filter(($1) => $1?.name),\r\n      desc: status.desc,\r\n      value: status.value,\r\n      error: status.error,\r\n    };\r\n    this.msgChannel.next(log as WorkType.WorkStatus);\r\n  }\r\n\r\n  addWork(work: WorkType.Work) {\r\n    if (\r\n      (work.constructor as any).isAble &&\r\n      (work.constructor as any).isAble() === false\r\n    ) {\r\n      const desc = '[content][Func:addWork][work isAble is false]';\r\n      return this.sendLog({\r\n        content: this,\r\n        work: [],\r\n        desc,\r\n        value: null,\r\n        error: new Error(desc),\r\n      });\r\n    }\r\n    if (this.status !== WorkType.WorkRunStatus.INIT) {\r\n      return this.sendLog({\r\n        content: this,\r\n        work: [],\r\n        desc: '[content][Func:addWork][context status is not init]',\r\n        value: new BooleanObject(false),\r\n      });\r\n    }\r\n    work.context = this;\r\n    this.works.push(work);\r\n  }\r\n\r\n  addWorks(...works: WorkType.Work[]): void {\r\n    works.forEach(this.addWork);\r\n  }\r\n\r\n  async prepareWorks() {\r\n    if (this.status !== WorkType.WorkRunStatus.INIT) {\r\n      return this.sendLog({\r\n        content: this,\r\n        work: [],\r\n        desc: '[content][Func:prepareWorks][context status is not init]',\r\n        value: new BooleanObject(false),\r\n      });\r\n    }\r\n    await Promise.all(\r\n      this.works.map(\r\n        ($1: WorkType.Work, index: number, source: WorkType.Work[]) => {\r\n          const before: WorkType.Work = source[index - 1];\r\n          const after: WorkType.Work = source[index + 1];\r\n          return $1.prepare(before, after);\r\n        }\r\n      )\r\n    );\r\n    this.status = WorkType.WorkRunStatus.READY;\r\n  }\r\n\r\n  dispatch(input?: any | BaseType) {\r\n    if (this.status === WorkType.WorkRunStatus.INIT) {\r\n      return this.sendLog({\r\n        content: this,\r\n        work: [],\r\n        desc: '[context][Func:run][run status is not ready  or 已经初始化]',\r\n        value: new BooleanObject(false),\r\n      });\r\n    }\r\n    const inputWork = this.works[0];\r\n    if (inputWork) {\r\n      (inputWork as unknown as WorkType.WorkEntrance).startRun(decide(input));\r\n    }\r\n    this.status = WorkType.WorkRunStatus.RUNNING;\r\n  }\r\n\r\n  /**\r\n   * 停止执行\r\n   * 关闭\r\n   */\r\n  stopWorkChain(): Promise<boolean> {\r\n    const that = this;\r\n    return new Promise((resolve, reject) => {\r\n      const taskUns: Observable<Boolean>[] = this.works.map(($1) =>\r\n        $1.stopWork()\r\n      );\r\n      let isSuccess: boolean = false;\r\n      let errors: WorkType.Work[] = [];\r\n      forkJoin(taskUns)\r\n        .pipe(take(1))\r\n        .subscribe({\r\n          next: (values) => {\r\n            isSuccess = values.every(($1, index) => {\r\n              if ($1 === true) return true;\r\n              errors.push(this.works[index]);\r\n              return false;\r\n            });\r\n            resolve(isSuccess);\r\n          },\r\n          error: (error: Error) => {\r\n            // 关闭报错\r\n            reject(error);\r\n          },\r\n          complete: () => {\r\n            this.sendLog({\r\n              content: that,\r\n              work: errors,\r\n              desc: '[content][Func:stopWorkChain]',\r\n              value: new ObjectTarget({\r\n                id: 'stopWorkChain',\r\n                value: decide(isSuccess),\r\n                option: {},\r\n              }),\r\n            });\r\n          },\r\n        });\r\n    });\r\n  }\r\n\r\n  clear(): void {\r\n    this.pools.forEach(($1) => $1.unsubscribe());\r\n  }\r\n}\r\n","\r\nimport { ObjectTarget } from \"./Targets/ObjectTarget\";\r\nimport { ArrayObject } from \"./Targets/ArrayObject\";\r\nimport { MapObject } from \"./Targets/MapObject\";\r\nimport { SetObject } from \"./Targets/SetObject\";\r\nimport { NumberObject } from \"./Targets/NumberObject\";\r\nimport { StringObject } from \"./Targets/StringObject\";\r\nimport { BooleanObject } from \"./Targets/BooleanObject\";\r\nimport { DateObject } from \"./Targets/DateObject\";\r\nimport { DataObject } from \"./Targets/DataObject\";\r\nimport { OptionalObject } from './Targets/NullObject'\r\n// import { MixinsObject } from './Targets/Mixins'\r\n\r\nexport {\r\n  ObjectTarget,\r\n  ArrayObject,\r\n  MapObject,\r\n  SetObject,\r\n  NumberObject,\r\n  StringObject,\r\n  BooleanObject,\r\n  DateObject,\r\n  DataObject,\r\n  // MixinsObject,\r\n  OptionalObject\r\n};","import { ControlFlow } from '../../Control';\r\nimport {\r\n  ArrayUint,\r\n  attribute,\r\n  DefaultValue,\r\n  onlyDeclaration,\r\n  Params,\r\n} from '../../util';\r\nimport { Value } from '../../../index';\r\nimport { ObjectTarget } from './ObjectTarget';\r\nimport { BaseType } from '../../../Types';\r\nimport { NumberObject } from './NumberObject';\r\nimport { decide } from '../../valueUtil';\r\n\r\n@ArrayUint\r\nexport class ArrayObject<T>\r\n  extends ObjectTarget<Array<T>>\r\n  implements Value.ArrayAble<T>, ControlFlow.CollectionArray\r\n{\r\n  static attributes: Set<string> = new Set();\r\n  static empty: ArrayObject<Object> = new ArrayObject([]);\r\n\r\n  @DefaultValue(Object.prototype.toString.call([])) static type: string;\r\n  declare _value: Array<T>;\r\n\r\n  constructor(...values: Array<Array<T> | number>) {\r\n    const first = values[0];\r\n    const firstIsArray = first instanceof Array;\r\n    var init: any = null;\r\n    if (firstIsArray && values.length === 1) {\r\n      init = first;\r\n    } else {\r\n      init = new Array(...values);\r\n    }\r\n    super(init);\r\n    this._value = init;\r\n  }\r\n\r\n  @attribute()\r\n  len(): number {\r\n    return this._value.length;\r\n  }\r\n  @attribute()\r\n  first(): T {\r\n    return this[0];\r\n  }\r\n  @attribute()\r\n  last(): T {\r\n    return this[this._value.length - 1];\r\n  }\r\n  @attribute()\r\n  valueOfIndex(@Params('index') index: number): T {\r\n    return this[index];\r\n  }\r\n  valueOf(): Array<T> {\r\n    return this._value;\r\n  }\r\n\r\n  merge(target: ArrayObject<T>): ArrayObject<T> {\r\n    return new ArrayObject([...this._value, ...target._value]);\r\n  }\r\n\r\n  @onlyDeclaration\r\n  collectionArray(key: ControlFlow.ArrayEnum, ...args: any[]): BaseType {\r\n    return null;\r\n  }\r\n  // array function\r\n  @onlyDeclaration\r\n  concat(...items: (T | ArrayObject<T>)[]): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  copyWithin(target: number, start: number, end?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  fill(value: number, start?: number, end?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  find(\r\n    predicate: (value: number, index: number, obj: Uint8Array) => boolean,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  findIndex(\r\n    predicate: (value: number, index: number, obj: Uint8Array) => boolean,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  lastIndexOf(searchElement: number, fromIndex?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  pop(): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  push(...items: T[]): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  reverse(): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  shift(): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  unshift(...items: T[]): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  slice(start?: number, end?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  sort(compareFn?: (a: number, b: number) => number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  splice(start: number, deleteCount?: number, ...items: any[]): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  includes(searchElement: T, fromIndex?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  indexOf(searchElement: T, fromIndex?: number): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  join(separator?: string): BaseType {\r\n    return null;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  entries(): ObjectTarget<IterableIterator<[T, T]>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  values(): ObjectTarget<IterableIterator<T>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  keys(): ObjectTarget<IterableIterator<T>> {\r\n    return null as any;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  forEach(\r\n    callbackfn: (value: T, index: number, array: readonly T[]) => void,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  filter<S extends T>(\r\n    predicate: (value: T, index: number, array: readonly T[]) => value is S,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  map<U>(\r\n    callbackfn: (value: T, index: number, array: T[]) => U,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  every<S extends T>(\r\n    predicate: (value: T, index: number, array: T[]) => value is S,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  some(\r\n    predicate: (value: T, index: number, array: T[]) => unknown,\r\n    thisArg?: any\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  reduce(\r\n    callbackfn: (\r\n      previousValue: T,\r\n      currentValue: T,\r\n      currentIndex: number,\r\n      array: T[]\r\n    ) => T,\r\n    initialValue?: T\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  reduceRight(\r\n    callbackfn: (\r\n      previousValue: T,\r\n      currentValue: T,\r\n      currentIndex: number,\r\n      array: T[]\r\n    ) => T,\r\n    initialValue?: T\r\n  ): BaseType {\r\n    return null;\r\n  }\r\n  @onlyDeclaration\r\n  toLocaleString(): BaseType {\r\n    return null;\r\n  }\r\n\r\n  get length(): NumberObject {\r\n    return decide(this._value.length) as NumberObject;\r\n  }\r\n}\r\n","import { ControlFlow } from '../../Control';\r\nimport { attribute, DefaultValue } from '../../util';\r\nimport { Value } from '../../../Types';\r\nimport { ObjectTarget } from './ObjectTarget';\r\n\r\nexport class BooleanObject\r\n  extends ObjectTarget<boolean>\r\n  implements Value.BooleanAble\r\n{\r\n  static attributes: Set<string> = new Set();\r\n  static empty: BooleanObject = new BooleanObject(false);\r\n\r\n  @DefaultValue(Object.prototype.toString.call(new Boolean(1)))\r\n  static type: string;\r\n  declare _value: boolean;\r\n  constructor(value: boolean = false) {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n  @attribute()\r\n  valueOf(): boolean {\r\n    return !!this._value;\r\n  }\r\n}\r\n","\r\nimport { attribute } from \"../../util\";\r\nimport { Value } from \"../../../Types\";\r\nimport { ObjectTarget } from \"./ObjectTarget\";\r\n\r\nexport class DataObject\r\n  extends ObjectTarget<ArrayBuffer>\r\n  implements Value.DataAble {\r\n  static attributes: Set<string> = new Set();\r\n  static empty: DataObject = new DataObject(new ArrayBuffer(0));\r\n  declare _value: ArrayBuffer;\r\n\r\n  constructor(value: ArrayBuffer = new ArrayBuffer(0)) {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n\r\n  data(): ArrayBuffer {\r\n    return this.valueOf();\r\n  }\r\n\r\n  @attribute()\r\n  valueOf(): ArrayBuffer {\r\n    return this._value;\r\n  }\r\n}\r\n","import { ControlFlow } from \"../../Control\";\r\nimport { attribute, DefaultValue } from \"../../util\";\r\nimport { Value } from \"../../../Types\";\r\nimport { ObjectTarget } from \"./ObjectTarget\";\r\n\r\nexport class DateObject\r\n  extends ObjectTarget<Date>\r\n  implements Value.DateAble {\r\n  static attributes: Set<string> = new Set();\r\n  static empty: DateObject = new DateObject(new Date());\r\n\r\n  @DefaultValue(Object.prototype.toString.call(new Date())) static type: string;\r\n  declare _value: Date;\r\n  constructor(value: Date = new Date()) {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n  @attribute()\r\n  timestamp(): number {\r\n    return this.valueOf().getTime();\r\n  }\r\n  @attribute()\r\n  valueOf(): Date {\r\n    return new Date(this._value);\r\n  }\r\n}\r\n","import { ControlFlow } from '../../Control';\r\nimport { attribute, DefaultValue, MapUint, onlyDeclaration } from '../../util';\r\nimport { BaseType, Value } from '../../../Types';\r\nimport { ObjectTarget } from './ObjectTarget';\r\nimport { decide } from '../../valueUtil';\r\nimport { NumberObject } from './NumberObject';\r\n@MapUint\r\nexport class MapObject<T, U>\r\n  extends ObjectTarget<Map<T, U>>\r\n  implements Value.MapAble<T, U>, ControlFlow.CollectionMap<T, U>\r\n{\r\n  static attributes: Set<string> = new Set();\r\n  static empty: MapObject<any, any> = new MapObject(new Map());\r\n  declare _value: Map<T, U>;\r\n  @DefaultValue(Object.prototype.toString.call(new Map())) static type: string;\r\n  constructor(value: Map<T, U> = new Map()) {\r\n    super(value);\r\n    this._value = new Map(value);\r\n  }\r\n\r\n  @attribute()\r\n  len(): number {\r\n    return this._value.size;\r\n  }\r\n\r\n  valueOf(): Map<T, U> {\r\n    return this._value;\r\n  }\r\n  merge(target: MapObject<T, U>): MapObject<T, U> {\r\n    const newMap = new Map<T, U>(this._value);\r\n    target._value.forEach(($1, key) => newMap.set(key, $1));\r\n    return new MapObject(newMap);\r\n  }\r\n  @onlyDeclaration\r\n  collectionMap(key: ControlFlow.MapEnum, ...args: any[]): U | void {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  get(key: string): U | void {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  set(key: string, value: BaseType): void {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  has(key: string): Value.BooleanAble {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  delete(key: string): Value.BooleanAble {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  clear(): void {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  entries(): Value.ObjectAble<IterableIterator<[T, U]>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  forEach(\r\n    callback: (value: U, key: T, map: Map<T, U>) => void,\r\n    thisArg?: any\r\n  ): void {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  values(): Value.ObjectAble<IterableIterator<U>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  keys(): Value.ObjectAble<IterableIterator<T>> {\r\n    return null as any;\r\n  }\r\n\r\n  get size(): Value.NumberAble {\r\n    return decide(this._value.size) as NumberObject;\r\n  }\r\n}\r\n","import { attribute, DefaultValue } from '../../util';\r\nimport { Value } from '../../../Types';\r\nimport { ObjectTarget } from './ObjectTarget';\r\n\r\nexport class OptionalObject\r\n  extends ObjectTarget<Value.NULL>\r\n  implements Value.NullAble {\r\n  static attributes: Set<string> = new Set();\r\n  @DefaultValue(Object.prototype.toString.call(new Date())) static type: string;\r\n  declare _value: Value.NULL;\r\n  constructor(value: Value.NULL = null) {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n  @attribute()\r\n  valueOf(): Value.NULL {\r\n    return this._value;\r\n  }\r\n\r\n  merge(target: Value.ObjectAble<Value.NULL>): Value.ObjectAble<Value.NULL> {\r\n    return new OptionalObject(null);\r\n  }\r\n\r\n  isTruly(): boolean {\r\n    return !!this._value;\r\n  }\r\n  isNull(): boolean {\r\n    return this._value === null;\r\n  }\r\n  isUndefined(): boolean {\r\n    return this._value === undefined;\r\n  }\r\n}\r\n","import { ControlFlow } from \"../../Control\";\r\nimport { attribute, CalcUnit, CompareUnit, DefaultValue ,onlyDeclaration} from \"../../util\";\r\nimport { Value } from \"../../../Types\";\r\nimport { ObjectTarget } from \"./ObjectTarget\";\r\nimport { BooleanObject } from \"./BooleanObject\";\r\n\r\n@CalcUnit\r\n@CompareUnit\r\nexport class NumberObject\r\n  extends ObjectTarget<number>\r\n  implements\r\n  Value.NumberAble,\r\n  ControlFlow.Compare<Value.NumberAble>,\r\n  ControlFlow.Calc<Value.NumberAble>\r\n{\r\n  static attributes: Set<string> = new Set();\r\n  static empty: NumberObject = new NumberObject(0);\r\n  @DefaultValue(Object.prototype.toString.call(new Number()))\r\n  static type: string;\r\n  declare _value: number;\r\n  constructor(value: number = 1) {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n  @attribute()\r\n  valueOf(): number {\r\n    return this._value;\r\n  }\r\n\r\n  merge(target: NumberObject): NumberObject {\r\n    return new NumberObject(this._value + target._value);\r\n  }\r\n\r\n  @onlyDeclaration\r\n  compare(type: ControlFlow.CompareEnum, target: NumberObject): Value.BooleanAble{\r\n    return new BooleanObject(false)\r\n  }\r\n  // Compare\r\n  // compare: ControlFlow.CompareExec;\r\n  more(target: Value.ValueAble<any>): Value.BooleanAble {\r\n    return new BooleanObject(this._value > target._value);\r\n  }\r\n  equal(target: Value.ValueAble<any>): Value.BooleanAble {\r\n    return new BooleanObject(this._value === target._value);\r\n  }\r\n  less(target: Value.ValueAble<any>): Value.BooleanAble {\r\n    return new BooleanObject(this._value < target._value);\r\n  }\r\n  moreEqual(target: Value.ValueAble<any>): Value.BooleanAble {\r\n    return new BooleanObject(this._value >= target._value);\r\n  }\r\n  lessEqual(target: Value.ValueAble<any>): Value.BooleanAble {\r\n    return new BooleanObject(this._value <= target._value);\r\n  }\r\n\r\n  @onlyDeclaration\r\n  calc(type:ControlFlow.CalcEnum,target: NumberObject): NumberObject {\r\n    return new NumberObject(0);\r\n  }\r\n\r\n  plus(target: Value.NumberAble): NumberObject {\r\n    return new NumberObject(this._value + target._value);\r\n  }\r\n  reduce(target: Value.NumberAble): NumberObject {\r\n    return new NumberObject(this._value - target._value);\r\n  }\r\n  multi(target: Value.NumberAble): NumberObject {\r\n    return new NumberObject(this._value * target._value);\r\n  }\r\n  divide(target: Value.NumberAble): NumberObject {\r\n    return new NumberObject(\r\n      target._value === 0 ? Infinity : this._value / target._value\r\n    );\r\n  }\r\n}\r\n","\r\nimport { DefaultValue } from \"../../util\";\r\nimport { Value } from \"../../../Types\";\r\nexport class ObjectTarget<T>\r\n  implements Value.ObjectAble<T>\r\n{\r\n  get [Symbol.toStringTag]() {\r\n    return 'flow-object';\r\n  }\r\n\r\n  static attributes: Set<string> = new Set();\r\n  static empty: ObjectTarget<Object> = new ObjectTarget({});\r\n\r\n  @DefaultValue(Object.prototype.toString.call({})) static type: string;\r\n  _value: T;\r\n  constructor(value: T = {} as any) {\r\n    this._value = value;\r\n  }\r\n  valueOf(): T {\r\n    return this._value;\r\n  }\r\n\r\n  merge(target: Value.ObjectAble<T>): Value.ObjectAble<T> {\r\n    try {\r\n      const result = Object.assign(this._value, target._value);\r\n      return new ObjectTarget(result);\r\n    } catch (error) {\r\n      return new ObjectTarget({} as any);\r\n    }\r\n  }\r\n  json(): Value.StringAble {\r\n    const { StringObject } = require(\"./StringObject\");\r\n    try {\r\n      return new StringObject(JSON.stringify(this._value));\r\n    } catch (error) {\r\n      return new StringObject(\"{}\");\r\n    }\r\n  }\r\n}\r\n","import { ControlFlow } from '../../Control';\r\nimport { attribute, DefaultValue, onlyDeclaration, SetUint } from '../../util';\r\nimport { Value } from '../../../Types';\r\nimport { ObjectTarget } from './ObjectTarget';\r\nimport { BaseType } from '../../..';\r\nimport { NumberObject } from './NumberObject';\r\nimport { decide } from '../../valueUtil';\r\n\r\n@SetUint\r\nexport class SetObject<T>\r\n  extends ObjectTarget<Set<T>>\r\n  implements Value.SetAble<T>, ControlFlow.CollectionSet<T>\r\n{\r\n  static attributes: Set<string> = new Set();\r\n  static empty: SetObject<any> = new SetObject(new Set());\r\n\r\n  @DefaultValue(Object.prototype.toString.call(new Set())) static type: string;\r\n  constructor(value?: Set<T> | Array<T>) {\r\n    const init = !!value\r\n      ? Array.isArray(value)\r\n        ? new Set(value)\r\n        : value\r\n      : new Set<T>();\r\n    super(init);\r\n    this._value = init;\r\n  }\r\n  @attribute()\r\n  len(): number {\r\n    return this._value.size;\r\n  }\r\n\r\n  valueOf(): Set<T> {\r\n    return this._value;\r\n  }\r\n\r\n  merge(target: SetObject<T>): SetObject<T> {\r\n    const newSet = new Set<T>();\r\n    this._value.forEach(($1) => newSet.add($1));\r\n    target.forEach(($1) => newSet.add($1));\r\n    new Set().keys;\r\n    return new SetObject(newSet);\r\n  }\r\n\r\n  @onlyDeclaration\r\n  collectionSet(key: ControlFlow.SetEnum, ...args: any[]): any {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  has(value: T): Value.BooleanAble {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  add(value: T): this {\r\n    return this;\r\n  }\r\n  @onlyDeclaration\r\n  delete(value: T): Value.BooleanAble {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  clear(): void {\r\n    return null as any;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  forEach(\r\n    callbackfn: (value: T, value2: T, set: Set<T>) => void,\r\n    thisArg?: any\r\n  ): void {\r\n    return null as any;\r\n  }\r\n\r\n  @onlyDeclaration\r\n  entries(): Value.ObjectAble<IterableIterator<[T, T]>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  values(): Value.ObjectAble<IterableIterator<T>> {\r\n    return null as any;\r\n  }\r\n  @onlyDeclaration\r\n  keys(): Value.ObjectAble<IterableIterator<T>> {\r\n    return null as any;\r\n  }\r\n\r\n  get size(): Value.NumberAble {\r\n    return decide(this._value.size) as NumberObject;\r\n  }\r\n}\r\n","import { Value } from \"../../../Types\";\r\nimport { attribute, DefaultValue } from \"../../util\";\r\nimport { ObjectTarget } from \"./ObjectTarget\";\r\nexport class StringObject\r\n  extends ObjectTarget<string>\r\n  implements Value.StringAble {\r\n  static attributes: Set<string> = new Set();\r\n  static empty: StringObject = new StringObject(\"\");\r\n\r\n  @DefaultValue(Object.prototype.toString.call(new String()))\r\n  static type: string;\r\n  declare _value: string;\r\n  constructor(value: string = '') {\r\n    super(value);\r\n    this._value = value;\r\n  }\r\n  @attribute()\r\n  valueOf(): string {\r\n    return this._value;\r\n  }\r\n}\r\n","// import { BooleanAble, NumberAble, ValueAble } from \"./Able/Ables\";\r\n\r\nimport { BaseType } from '..';\r\nimport { Value } from '../Types';\r\nexport namespace ControlFlow {\r\n  // 比较属性 compare\r\n  export enum CompareEnum {\r\n    More = 'more', //>\r\n    Equal = 'equal', //==\r\n    Less = 'less', //<\r\n    MoreEqual = 'moreEqual', //>=\r\n    LessEqual = 'lessEqual', //<=\r\n  }\r\n  // 计算属性\r\n  export enum CalcEnum {\r\n    Plus = 'plus', //+\r\n    Reduce = 'reduce', // -\r\n    Multi = 'multi', // *\r\n    Divide = 'divide', // /\r\n  }\r\n  //集合属性\r\n  export enum CollectionEnum {\r\n    Contain = 'contain', //是否包含\r\n    Add = 'add', //增加\r\n    ValueFor = 'valueFor', // 取值\r\n    Keys = 'keys', // 所有keys\r\n    Values = 'values', // 所有values\r\n  }\r\n  //Object.keys(Object.getOwnPropertyDescriptors(Array.prototype)).map($1=>`${$1}: ControlFlow.ArrayFunction`).join('\\n')\r\n  export enum ArrayEnum {\r\n    Concat = 'concat',\r\n    CopyWithin = 'copyWithin',\r\n    Fill = 'fill',\r\n    Find = 'find',\r\n    FindIndex = 'findIndex',\r\n    LastIndexOf = 'lastIndexOf',\r\n    Pop = 'pop',\r\n    Push = 'push',\r\n    Reverse = 'reverse',\r\n    Shift = 'shift',\r\n    Unshift = 'unshift',\r\n    Slice = 'slice',\r\n    Sort = 'sort',\r\n    Splice = 'splice',\r\n    Includes = 'includes',\r\n    IndexOf = 'indexOf',\r\n    Join = 'join',\r\n    Keys = 'keys',\r\n    Entries = 'entries',\r\n    Values = 'values',\r\n    ForEach = 'forEach',\r\n    Filter = 'filter',\r\n    Map = 'map',\r\n    Every = 'every',\r\n    Some = 'some',\r\n    Reduce = 'reduce',\r\n    ReduceRight = 'reduceRight',\r\n  }\r\n\r\n  export enum SetEnum {\r\n    Has = 'has',\r\n    Add = 'add',\r\n    Delete = 'delete',\r\n    Clear = 'clear',\r\n    Entries = 'entries',\r\n    ForEach = 'forEach',\r\n    Values = 'values',\r\n    Keys = 'keys',\r\n  }\r\n\r\n  export enum MapEnum {\r\n    Get = 'get',\r\n    Set = 'set',\r\n    Has = 'has',\r\n    Delete = 'delete',\r\n    Clear = 'clear',\r\n    Entries = 'entries',\r\n    ForEach = 'forEach',\r\n    Keys = 'keys',\r\n    Values = 'values',\r\n  }\r\n\r\n  // 比较 接口\r\n  export declare type CompareExec = (\r\n    type: CompareEnum,\r\n    target: Value.ValueAble<any>\r\n  ) => Value.BooleanAble;\r\n\r\n  export declare type CompareFunction = (\r\n    target: Value.ValueAble<any>\r\n  ) => Value.BooleanAble;\r\n\r\n  declare type CompareAble = {\r\n    [T in CompareEnum]: CompareFunction;\r\n  };\r\n  export interface Compare<U extends Value.ValueAble<any>> extends CompareAble {\r\n    compare<T extends CompareEnum>(type: T, target: U): Value.BooleanAble;\r\n  }\r\n\r\n  // 计算接口\r\n  export declare type CalcFunction = (\r\n    target: Value.NumberAble\r\n  ) => Value.NumberAble;\r\n\r\n  declare type CalcAble = {\r\n    [T in CalcEnum]: CalcFunction;\r\n  };\r\n  export interface Calc<U extends Value.NumberAble> extends CalcAble {\r\n    calc(type: ControlFlow.CalcEnum, target: U): U;\r\n  }\r\n\r\n  // Array\r\n  export declare type CollectionArrayExec = (\r\n    key: ArrayEnum,\r\n    ...args: any[]\r\n  ) => BaseType;\r\n  export declare type ArrayFunction = (...args) => BaseType | void;\r\n  declare type ArrayAbsoluteAble = {\r\n    [T in ArrayEnum]: ArrayFunction;\r\n  };\r\n  export interface CollectionArray extends ArrayAbsoluteAble {\r\n    collectionArray(key: ArrayEnum, ...args: any[]): BaseType;\r\n  }\r\n\r\n  // Set\r\n  export declare type CollectionSetExec = (\r\n    key: SetEnum,\r\n    ...args: any[]\r\n  ) => BaseType | void;\r\n  export declare type SetFunction<U> = (\r\n    ...args: any[]\r\n  ) => BaseType | U | Value.NULL | any;\r\n  declare type SetAbsoluteAble<U> = {\r\n    [T in SetEnum]: SetFunction<U>;\r\n  };\r\n  export interface CollectionSet<U> extends SetAbsoluteAble<U> {\r\n    collectionSet(\r\n      key: SetEnum,\r\n      ...args: any[]\r\n    ): BaseType | U | Value.NULL | any;\r\n  }\r\n\r\n  // Map\r\n  export declare type CollectionMapExec = (\r\n    key: MapEnum,\r\n    ...args: any[]\r\n  ) => BaseType | void;\r\n  export declare type MapFunction<U> = (\r\n    ...args: any[]\r\n  ) => CollectionMap<any, U> | U | any;\r\n  export declare type MapAbsoluteAble<U> = {\r\n    [T in MapEnum]: MapFunction<U>;\r\n  };\r\n  export interface CollectionMap<T, U> extends MapAbsoluteAble<U> {\r\n    collectionMap(key: MapEnum, ...args: any[]): U | void;\r\n  }\r\n}\r\n","import { BooleanObject, NumberObject } from './Able/ObjectAble';\r\nimport { Value } from '../Types';\r\nimport { ControlFlow } from './Control';\r\nimport { decide } from './valueUtil';\r\n\r\nexport const onlyDeclarationTag: string = 'onlyDeclaration';\r\n\r\nexport function attribute() {\r\n  return function ($1: any, $2: string, descriptor: PropertyDescriptor) {\r\n    ($1.constructor.attributes as Set<string>).add($2);\r\n  };\r\n}\r\n\r\nexport function Params(params: any) {\r\n  return function (target: any, methodName: any, paramsIndex: any) {\r\n    !target.$Meta && (target.$Meta = {});\r\n    !target.$Meta[methodName] && (target.$Meta[methodName] = {});\r\n    target.$Meta[methodName][paramsIndex] = params;\r\n  };\r\n}\r\nexport class ObjectManager {\r\n  static types: Set<string> = new Set();\r\n}\r\n\r\nexport function DefaultValue(value: string) {\r\n  return function (target: any, propertyName: string) {\r\n    target[propertyName] = value;\r\n    ObjectManager.types.add(value);\r\n  };\r\n}\r\n/**\r\n * 声明 方式无效 仅仅作为标记\r\n */\r\nexport function onlyDeclaration(\r\n  target: any,\r\n  name: string,\r\n  dec: PropertyDescriptor\r\n) {\r\n  dec.value.declaration = onlyDeclarationTag;\r\n}\r\n\r\nexport function CompareUnit(host: any) {\r\n  Object.keys(ControlFlow.CompareEnum).forEach((item) => {\r\n    const key = ControlFlow.CompareEnum[item];\r\n    const comFunction = host.prototype[key];\r\n    if (!comFunction || comFunction.declaration === onlyDeclarationTag) {\r\n      host.prototype[key] = () => new BooleanObject(false);\r\n    }\r\n  });\r\n  if (\r\n    host.prototype.compare?.declaration === onlyDeclarationTag ||\r\n    !!host.prototype.compare === false\r\n  )\r\n    host.prototype.compare = function (\r\n      type: ControlFlow.CompareEnum,\r\n      target: Value.ValueAble<any>\r\n    ) {\r\n      const execFunc = host.prototype[type]?.bind(\r\n        this\r\n      ) as ControlFlow.CompareFunction;\r\n      if (execFunc && typeof execFunc === 'function')\r\n        return execFunc.call(this, target);\r\n      return false;\r\n    };\r\n}\r\n\r\nexport function CalcUnit(host: any) {\r\n  Object.keys(ControlFlow.CalcEnum).forEach((item) => {\r\n    const key = ControlFlow.CalcEnum[item];\r\n    const comFunction = host.prototype[key];\r\n    if (!comFunction || comFunction.declaration === onlyDeclarationTag) {\r\n      host.prototype[key] = () => new NumberObject(0);\r\n    }\r\n  });\r\n  if (\r\n    host.prototype.calc?.declaration === onlyDeclarationTag ||\r\n    !!host.prototype.calc === false\r\n  )\r\n    host.prototype.calc = function (\r\n      type: ControlFlow.CalcEnum,\r\n      target: Value.ValueAble<any>\r\n    ) {\r\n      const execFunc = host.prototype[type]?.bind(\r\n        this\r\n      ) as ControlFlow.CalcFunction;\r\n      if (execFunc && typeof execFunc === 'function')\r\n        return execFunc.call(this, target);\r\n      return false;\r\n    };\r\n}\r\n\r\nexport function ArrayUint(host: any) {\r\n  Object.keys(ControlFlow.ArrayEnum).forEach((item) => {\r\n    const key = ControlFlow.ArrayEnum[item];\r\n    const comFunction = host.prototype[key];\r\n    if (!comFunction || comFunction.declaration === onlyDeclarationTag) {\r\n      host.prototype[key] = function (...args: any[]) {\r\n        const value = (this as Value.ArrayAble<any>).valueOf();\r\n        const execFunc = value[key];\r\n        let result;\r\n        if (typeof execFunc === 'function') {\r\n          result = execFunc.bind(value)(...args);\r\n        } else result = value;\r\n        return decide(result);\r\n      };\r\n    }\r\n  });\r\n  if (\r\n    host.prototype.collectionArray?.declaration === onlyDeclarationTag ||\r\n    !!host.prototype.collectionArray === false\r\n  )\r\n    host.prototype.collectionArray = function (\r\n      type: ControlFlow.ArrayEnum,\r\n      ...args: any[]\r\n    ) {\r\n      const execFunc = host.prototype[type]?.bind(\r\n        this\r\n      ) as ControlFlow.ArrayFunction;\r\n      if (execFunc && typeof execFunc === 'function') return execFunc(...args);\r\n      return false;\r\n    };\r\n}\r\n\r\nexport function SetUint(host: any) {\r\n  Object.keys(ControlFlow.SetEnum).forEach((item) => {\r\n    const key = ControlFlow.SetEnum[item];\r\n    const comFunction = host.prototype[key];\r\n    if (!comFunction || comFunction.declaration === onlyDeclarationTag) {\r\n      host.prototype[key] = function (...args: any[]) {\r\n        const value = (this as Value.SetAble<any>).valueOf();\r\n        const execFunc = value[key];\r\n        let result: any;\r\n        if (typeof execFunc === 'function') {\r\n          result = execFunc.bind(value)(...args);\r\n        } else result = value;\r\n        return decide(result);\r\n      };\r\n    }\r\n  });\r\n  if (\r\n    host.prototype.collectionSet?.declaration === onlyDeclarationTag ||\r\n    !!host.prototype.collectionSet === false\r\n  )\r\n    host.prototype.collectionSet = function (\r\n      type: ControlFlow.SetEnum,\r\n      ...args: any[]\r\n    ) {\r\n      const execFunc = host.prototype[type]?.bind(\r\n        this\r\n      ) as ControlFlow.SetFunction<any>;\r\n      if (execFunc && typeof execFunc === 'function') return execFunc(...args);\r\n      return false;\r\n    };\r\n}\r\n\r\nexport function MapUint(host: any) {\r\n  Object.keys(ControlFlow.MapEnum).forEach((item) => {\r\n    const key = ControlFlow.MapEnum[item];\r\n    const comFunction = host.prototype[key];\r\n    if (!comFunction || comFunction.declaration === onlyDeclarationTag) {\r\n      host.prototype[key] = function (...args: any[]) {\r\n        const value = (this as Value.MapAble<any, any>).valueOf();\r\n        const execFunc = value[key];\r\n        let result;\r\n        if (typeof execFunc === 'function') {\r\n          result = execFunc.bind(value)(...args);\r\n        } else result = value;\r\n        return decide(result);\r\n      };\r\n    }\r\n  });\r\n  if (\r\n    host.prototype.collectionMap?.declaration === onlyDeclarationTag ||\r\n    !!host.prototype.collectionMap === false\r\n  )\r\n    host.prototype.collectionMap = function (\r\n      type: ControlFlow.MapEnum,\r\n      ...args: any[]\r\n    ) {\r\n      const execFunc = host.prototype[type]?.bind(\r\n        this\r\n      ) as ControlFlow.MapFunction<any>;\r\n      if (execFunc && typeof execFunc === 'function') return execFunc(...args);\r\n      return false;\r\n    };\r\n}\r\n","import { BaseType } from '../Types';\r\nimport * as Value from './Able/ObjectAble';\r\n\r\nlet ObjectMap = null;\r\nconst init = () => {\r\n  if (ObjectMap === null) {\r\n    ObjectMap = {\r\n      '[object Object]': Value.ObjectTarget,\r\n      '[object Map]': Value.MapObject,\r\n      '[object Set]': Value.SetObject,\r\n      '[object Array]': Value.ArrayObject,\r\n      '[object Boolean]': Value.BooleanObject,\r\n      '[object Date]': Value.DateObject,\r\n      '[object Number]': Value.NumberObject,\r\n      '[object String]': Value.StringObject,\r\n      '[object ArrayBuffer]': Value.DataObject,\r\n      '[object Uint8Array]': Value.DataObject,\r\n      '[object Promise]': Value.ObjectTarget,\r\n      '[object Null]': Value.OptionalObject,\r\n      '[object Undefined]': Value.OptionalObject,\r\n    };\r\n  }\r\n  return ObjectMap;\r\n};\r\nexport const isAbleType = (value: any): boolean => {\r\n  init();\r\n  return Object.prototype.toString.call(value) === '[object flow-object]';\r\n};\r\n\r\n/**\r\n * 将js 数据转为 BaseType\r\n * 如果是BaseType类型 将不会包装。见[force]\r\n * @param value\r\n * @param force 是否强制包装\r\n * @returns\r\n */\r\nexport const decide = function (\r\n  value: any | BaseType,\r\n  force: boolean = false\r\n): BaseType {\r\n  init();\r\n  if (isAbleType(value) && force === false) return value;\r\n  const key = Object.prototype.toString.call(value);\r\n  const Target = ObjectMap[key];\r\n  if (Target) {\r\n    return new Target(value ?? {});\r\n  }\r\n  return new Value.ObjectTarget(value);\r\n};\r\n","import { PartialObserver, Observable, Subject, Subscription } from 'rxjs';\r\n\r\nimport { ContextRunOption } from './Configs';\r\nimport { PlatformBridgeAble } from './Bridge/ConfigTypes';\r\n\r\nexport namespace Value {\r\n  export type NULL = null | undefined;\r\n  export interface ValueAble<V> {\r\n    _value: V;\r\n    valueOf(): V;\r\n  }\r\n  export interface ObjectAble<V> extends ValueAble<V> {\r\n    json(): Value.StringAble;\r\n    merge(target: ObjectAble<V>): ObjectAble<V>;\r\n  }\r\n  export interface ArrayAble<T>\r\n    extends ValueAble<Array<T>>,\r\n      ObjectAble<Array<T>> {\r\n    len(): number;\r\n    first(): T;\r\n    last(): T;\r\n    valueOfIndex(index: number): T;\r\n    valueOf(): Array<T>;\r\n  }\r\n\r\n  export interface MapAble<T, U>\r\n    extends ValueAble<Map<T, U>>,\r\n      ObjectAble<Map<T, U>> {\r\n    len(): number;\r\n    valueOf(): Map<T, U>;\r\n  }\r\n\r\n  export interface SetAble<T> extends ValueAble<Set<T>>, ObjectAble<Set<T>> {\r\n    len(): number;\r\n    valueOf(): Set<T>;\r\n  }\r\n\r\n  export interface NumberAble extends ValueAble<number>, ObjectAble<number> {\r\n    valueOf(): number;\r\n  }\r\n\r\n  export interface StringAble extends ValueAble<string>, ObjectAble<string> {\r\n    valueOf(): string;\r\n  }\r\n\r\n  export interface BooleanAble extends ValueAble<boolean>, ObjectAble<boolean> {\r\n    valueOf(): boolean;\r\n  }\r\n\r\n  export interface DateAble extends ValueAble<Date>, ObjectAble<Date> {\r\n    timestamp(): number;\r\n  }\r\n\r\n  export interface DataAble\r\n    extends ValueAble<ArrayBuffer>,\r\n      ObjectAble<ArrayBuffer> {\r\n    data(): ArrayBuffer;\r\n  }\r\n\r\n  export interface NullAble extends ValueAble<NULL>, ObjectAble<NULL> {\r\n    valueOf(): null | undefined;\r\n    isTruly(): boolean;\r\n    isNull(): boolean;\r\n    isUndefined(): boolean;\r\n  }\r\n  export interface Mixins<\r\n    V extends Value.ObjectAble<any> = Value.ObjectAble<any>,\r\n    U extends any = NULL\r\n  > extends ValueAble<V | U> {}\r\n}\r\n\r\nexport type BaseType =\r\n  | Value.ObjectAble<any> // ObjectTarget\r\n  | Value.ArrayAble<any> // ArrayTarget\r\n  | Value.MapAble<string | symbol, any> // MapTarget\r\n  | Value.SetAble<any> // SetTarget\r\n  | Value.StringAble // StringTarget\r\n  | Value.NumberAble // NumberTarget\r\n  | Value.BooleanAble // BooleanTarget\r\n  | Value.DateAble //  DateTarget\r\n  | Value.DataAble // DataTarget\r\n  | Value.NullAble // NullTarget\r\n  | Value.Mixins<Value.ObjectAble<any>>; // MixinsTarget\r\n\r\nexport type ChannelValue<T extends BaseType = BaseType> = {\r\n  value: T;\r\n  id: string;\r\n  option?: any;\r\n};\r\nexport type ChannelObject<T extends BaseType = BaseType> = Value.ObjectAble<\r\n  ChannelValue<T>\r\n>;\r\n\r\nexport namespace WorkType {\r\n  export declare type ConfigInfo = { [key: string]: any };\r\n\r\n  export type WorkUUID = string;\r\n\r\n  export type WorkConstantKey = string;\r\n\r\n  export type WorkConstant = Map<WorkConstantKey, BaseType>;\r\n\r\n  export type WorkFunction = (\r\n    input: ChannelObject\r\n  ) => Observable<ChannelObject>;\r\n\r\n  export enum WorkRunStatus {\r\n    INIT, //初始状态\r\n    // FROZEN,//冻结状态\r\n    READY, //准备状态 已经初始化\r\n    // PRE_RUN,//预运行状态 已经初始化\r\n    RUNNING, //运行中\r\n    COMPLETE, //完成\r\n  }\r\n  export interface WorkStatus<T extends BaseType = BaseType> {\r\n    content?: ContextImpl;\r\n    work?: Work[];\r\n    desc?: any;\r\n    value?: T | ChannelValue<T>;\r\n    date?: Date;\r\n    error?: Error;\r\n  }\r\n\r\n  type WorkTypes = 'electron_run' | 'web_run' | 'node_run';\r\n\r\n  export type WorkOperation = {\r\n    [P in WorkTypes]?: WorkFunction;\r\n  };\r\n  export interface WorkContext {\r\n    beforeWork?: Work;\r\n    nextWork?: Work;\r\n    context?: ContextImpl;\r\n  }\r\n  export interface WorkChain extends Subject<BaseType> {\r\n    runSubscriptions: Map<string, WorkUnitImpl>;\r\n    pools: Subscription[];\r\n  }\r\n  // 入口\r\n  export interface WorkEntrance {\r\n    // 仅仅头部work 有效\r\n    startRun(value: BaseType, runId?: string): void;\r\n  }\r\n  export interface WorkConfig {\r\n    //根据该属性 控制Work 工作流程\r\n    config: ConfigInfo;\r\n  }\r\n  export interface WorkUnitImpl {\r\n    context?: ContextImpl;\r\n    work?: WorkType.Work;\r\n    uuid: string;\r\n    sub: Subscription;\r\n  }\r\n  export declare interface Work\r\n    extends WorkOperation,\r\n      WorkContext,\r\n      WorkChain,\r\n      WorkConfig {\r\n    name: string;\r\n    id: number;\r\n    uuid: WorkUUID;\r\n    // run: WorkFunction;\r\n    run?(input: ChannelObject, option?: any): Observable<ChannelObject>;\r\n    web_run?(input: ChannelObject, option?: any): Observable<ChannelObject>;\r\n    node_run?(input: ChannelObject, option?: any): Observable<ChannelObject>;\r\n    electron_run?(\r\n      input: ChannelObject,\r\n      option?: any\r\n    ): Observable<ChannelObject>;\r\n    prepare(before?: Work, next?: Work): Promise<void>;\r\n    // 关闭Work\r\n    stopWork(): Observable<Boolean>;\r\n    clear(): void;\r\n    addVariable(name: string, value: BaseType): void;\r\n    error(err: Error): void;\r\n    logMsg(msg: string, inputValue: ChannelObject): void;\r\n    // 节点\r\n    // 收到一个消息\r\n    nextValue(input: BaseType): BaseType;\r\n    //完成一次 [输入->输出]\r\n    completeOneLoop(input: BaseType, toValue: BaseType, success: Boolean): void;\r\n  }\r\n}\r\n\r\nexport declare interface ContextImpl {\r\n  status: WorkType.WorkRunStatus;\r\n  platform: PlatformBridgeAble;\r\n  runOptions: ContextRunOption;\r\n  runConstant: Map<WorkType.WorkUUID, WorkType.WorkConstant>;\r\n  works: WorkType.Work[];\r\n  msgChannel: Subject<WorkType.WorkStatus<any>>;\r\n  pools: Subscription[];\r\n  addWork(work: WorkType.Work): void;\r\n  addWorks(...works: WorkType.Work[]): void;\r\n  addWorkLog(\r\n    tap: PartialObserver<WorkType.WorkStatus<ChannelObject>>\r\n  ): Subscription;\r\n  // 准备\r\n  prepareWorks(): Promise<void>;\r\n  // 开始运行\r\n  dispatch(input?: any | BaseType): void;\r\n  //\r\n  addVariable(from: WorkType.Work, name: string, value: BaseType): void;\r\n  sendLog(status: WorkType.WorkStatus<BaseType>): void;\r\n  clear(): void;\r\n  stopWorkChain(): Promise<boolean>;\r\n}\r\n","enum JSRUNEnvirType {\r\n  NODE_PC = 10,\r\n  WEB_PC = 20,\r\n  WEB_MOBILE = 26,\r\n  ELECTRON_PC = 40,\r\n  OTHER = 100,\r\n}\r\nconst EnvirType = {\r\n  /**\r\n   * WIndow 浏览器 运行环境\r\n   */\r\n  WINDOWS: \"win\",\r\n  /**\r\n   * MAC 浏览器 运行环境\r\n   */\r\n  MACINTOSH: \"mac\",\r\n  /***\r\n   * Linux 浏览器 运行环境\r\n   */\r\n  LINUX: \"linux\",\r\n  /***\r\n   * ios 浏览器  运行环境\r\n   */\r\n  IOS: \"iOS\",\r\n  /**\r\n   * 安卓 浏览器 运行环境\r\n   */\r\n  ANDROID: \"Android\",\r\n  /**\r\n   * 黑莓 运行环境\r\n   */\r\n  BLACKBERRY: \"bb\",\r\n  /***\r\n   * Win iphone 运行环境\r\n   */\r\n  WINDOWS_PHONE: \"winphone\",\r\n\r\n  Other: 'other'\r\n};\r\n/**\r\n * 是否为 rn 代码\r\n */\r\nexport function isReactNative() {\r\n  var GLOBAL;\r\n  try {\r\n    GLOBAL = window;\r\n  } catch (error) {\r\n    GLOBAL = global || globalThis;\r\n  }\r\n  return (\r\n    GLOBAL &&\r\n    (GLOBAL as any).ReactNative &&\r\n    (GLOBAL as any).ReactNative.NativeModules\r\n  );\r\n}\r\n\r\nexport function getJSEnvironment() {\r\n  if (navigator.userAgent) {\r\n    var userAgent = navigator.userAgent;\r\n    var platform, result;\r\n    const getDesktopOS = () => {\r\n      var pf = navigator.platform;\r\n      if (pf.indexOf(\"Win\") != -1) {\r\n        // 说明当前是Windows操作系统\r\n        var rVersion = /Windows NT (\\d+).(\\d)/i;\r\n        var uaResult: any[] = userAgent.match(rVersion);\r\n        var sVersionStr = \"\";\r\n        if (uaResult[1] == \"6\") {\r\n          if (uaResult[2] == 1) {\r\n            sVersionStr = \"7\"; // 说明当前运行在Windows 7 中\r\n          } else if (uaResult[2] > 1) {\r\n            sVersionStr = \"8\"; // 说明当前运行在Windows 8 中\r\n          }\r\n        } else {\r\n          sVersionStr = uaResult[1];\r\n        }\r\n        return { name: EnvirType.WINDOWS, versionStr: sVersionStr };\r\n      } else if (pf.indexOf(\"Mac\") != -1) {\r\n        return { name: EnvirType.MACINTOSH, versionStr: \"\" }; // Macintosh操作系统\r\n      } else if (pf.indexOf(\"Linux\") != -1) {\r\n        return { name: EnvirType.LINUX, versionStr: \"\" }; // 说明当前运行在Linux操作系统\r\n      }\r\n      return null;\r\n    };\r\n    platform = /Windows Phone (?:OS )?([\\d.]*)/; // windows phone的正则表达式\r\n    result = userAgent.match(platform);\r\n    if (result) {\r\n      return { name: EnvirType.WINDOWS_PHONE, versionStr: result[1] };\r\n    }\r\n    // BlackBerry 10\r\n    if (userAgent.indexOf(\"(BB10;\") > 0) {\r\n      platform = /\\sVersion\\/([\\d.]+)\\s/; // BlackBerry的regular expression\r\n      result = userAgent.match(platform);\r\n      if (result) {\r\n        return { name: EnvirType.BLACKBERRY, versionStr: result[1] };\r\n      } else {\r\n        return { name: EnvirType.BLACKBERRY, versionStr: \"10\" };\r\n      }\r\n    }\r\n    // iOS, Android, BlackBerry 6.0+:\r\n    platform =\r\n      /\\(([a-zA-Z ]+);\\s(?:[U]?[;]?)([\\D]+)((?:[\\d._]*))(?:.*[\\)][^\\d]*)([\\d.]*)\\s/;\r\n    result = userAgent.match(platform);\r\n    if (result) {\r\n      var appleDevices = /iPhone|iPad|iPod/;\r\n      var bbDevices = /PlayBook|BlackBerry/;\r\n      if (result[0].match(appleDevices)) {\r\n        result[3] = result[3].replace(/_/g, \".\");\r\n        return { name: EnvirType.IOS, versionStr: result[3] }; // iOS操作系统\r\n      } else if (result[2].match(/Android/)) {\r\n        result[2] = result[2].replace(/\\s/g, \"\");\r\n        return { name: EnvirType.ANDROID, versionStr: result[3] }; // Android操作系统\r\n      } else if (result[0].match(bbDevices)) {\r\n        return { name: EnvirType.BLACKBERRY, versionStr: result[4] }; // Blackberry\r\n      }\r\n    }\r\n    //Android平台上的Firefox浏览器\r\n    platform = /\\((Android)[\\s]?([\\d][.\\d]*)?;.*Firefox\\/[\\d][.\\d]*/;\r\n    result = userAgent.match(platform);\r\n    if (result) {\r\n      return {\r\n        name: EnvirType.ANDROID,\r\n        versionStr: result.length == 3 ? result[2] : \"\",\r\n      };\r\n    }\r\n    // Desktop\r\n    return getDesktopOS();\r\n  } else {\r\n    return { name: EnvirType.Other, versionStr: \"\" };\r\n  }\r\n}\r\n\r\nvar currentEnir: JSRUNEnvirType;\r\nif ((globalThis || window).process) {\r\n  if ((globalThis || window) &&\r\n    (globalThis || window).process &&\r\n    (globalThis || window).process.versions &&\r\n    (globalThis || window).process.versions[\"electron\"]) {\r\n    currentEnir = JSRUNEnvirType.ELECTRON_PC\r\n  } else\r\n    currentEnir = JSRUNEnvirType.NODE_PC;\r\n} else {\r\n  const typeName = getJSEnvironment().name;\r\n  switch (typeName) {\r\n    case EnvirType.WINDOWS:\r\n      currentEnir = JSRUNEnvirType.WEB_PC;\r\n      break;\r\n    case EnvirType.MACINTOSH:\r\n      currentEnir = JSRUNEnvirType.WEB_PC;\r\n      break;\r\n    case EnvirType.IOS:\r\n      currentEnir = JSRUNEnvirType.WEB_MOBILE;\r\n      break;\r\n    case EnvirType.ANDROID:\r\n      currentEnir = JSRUNEnvirType.WEB_MOBILE;\r\n      break;\r\n    case EnvirType.LINUX:\r\n      currentEnir = JSRUNEnvirType.WEB_PC;\r\n      break;\r\n    default:\r\n      currentEnir = JSRUNEnvirType.OTHER;\r\n      break;\r\n  }\r\n}\r\n\r\nconst isWeb =\r\n  currentEnir === JSRUNEnvirType.WEB_MOBILE || currentEnir === JSRUNEnvirType.WEB_PC;\r\n\r\nconst isNode =\r\n  currentEnir === JSRUNEnvirType.NODE_PC;\r\n\r\n\r\nconst isElectron = currentEnir === JSRUNEnvirType.ELECTRON_PC;\r\n\r\nconst isPC =\r\n  currentEnir === JSRUNEnvirType.NODE_PC ||\r\n  currentEnir === JSRUNEnvirType.WEB_PC ||\r\n  currentEnir === JSRUNEnvirType.ELECTRON_PC;\r\n\r\nconst isMobile = currentEnir === JSRUNEnvirType.WEB_MOBILE;\r\n\r\nconst isJS = true;\r\n\r\nexport type PlatformOSType = \"web\" | \"node\" | \"electron\" | 'other';\r\n\r\ntype Select<T> = (select: { [platform in PlatformOSType]?: T }) => T;\r\n\r\nconst PlatformSelect: Select<any> = (select) => {\r\n  let target: any;\r\n  if (isElectron) {\r\n    target = select.electron;\r\n  } else if (isWeb) {\r\n    target = select.web;\r\n  } else if (isNode) {\r\n    target = select.node;\r\n  }\r\n  return target;\r\n};\r\nexport {\r\n  JSRUNEnvirType,\r\n  currentEnir,\r\n  isWeb,\r\n  isNode,\r\n  isPC,\r\n  isElectron,\r\n  isMobile,\r\n  isJS,\r\n  PlatformSelect,\r\n};\r\n","import { BaseType, ObjectTarget } from \"..\";\r\nimport { decide, isAbleType } from \"../Object/valueUtil\";\r\nimport { ChannelObject, ChannelValue } from \"../Types\";\r\n/**\r\n * 解包\r\n * @param value \r\n * @returns \r\n */\r\nexport const unpackValue = (value: ChannelObject): string => {\r\n  if (!!value === false) return \"\";\r\n  return (value._value as ChannelValue).value.valueOf()\r\n}\r\n\r\n/**\r\n * 组合包装\r\n * @param input \r\n * @param value \r\n * @returns \r\n */\r\nexport function wrapperValue<T extends BaseType = BaseType>(input: ChannelObject, value: T | any): ChannelObject<T> {\r\n  const nextValue = decide(value) as T;\r\n  return new ObjectTarget({\r\n    ...(input._value),\r\n    value: nextValue,\r\n  })\r\n}","/*\r\n * @Author: zihao.zhu@united-imaging.com \r\n * @Date: 2022-06-08 19:31:16 \r\n * @Last Modified by: zihao.zhu\r\n * @Last Modified time: 2022-06-08 19:35:43\r\n * @desc : undefined \r\n */\r\n\r\nconst isURL = (url: string): boolean => {\r\n  var strRegex = '^((https|http|ftp)://)?'//(https或http或ftp):// 可有可无\r\n    + '(([\\\\w_!~*\\'()\\\\.&=+$%-]+: )?[\\\\w_!~*\\'()\\\\.&=+$%-]+@)?' //ftp的user@  可有可无\r\n    + '(([0-9]{1,3}\\\\.){3}[0-9]{1,3}' // IP形式的URL- 3位数字.3位数字.3位数字.3位数字\r\n    + '|' // 允许IP和DOMAIN（域名） \r\n    + '(localhost)|'\t//匹配localhost\r\n    + '([\\\\w_!~*\\'()-]+\\\\.)*' // 域名- 至少一个[英文或数字_!~*\\'()-]加上.\r\n    + '\\\\w+\\\\.' // 一级域名 -英文或数字  加上.\r\n    + '[a-zA-Z]{1,6})' // 顶级域名- 1-6位英文 \r\n    + '(:[0-9]{1,5})?' // 端口- :80 ,1-5位数字\r\n    + '((/?)|' // url无参数结尾 - 斜杆或这没有\r\n    + '(/[\\\\w_!~*\\'()\\\\.;?:@&=+$,%#-]+)+/?)$';//请求参数结尾- 英文或数字和[]内的各种字符\r\n\r\n  var re = new RegExp(strRegex, 'i');//i不区分大小写\r\n  //将url做uri转码后再匹配，解除请求参数中的中文和空字符影响\r\n  if (re.test(encodeURI(url))) {\r\n    return (true);\r\n  } else {\r\n    return (false);\r\n  }\r\n}\r\n\r\nconst isWindowFilePath = (url: string): boolean => {\r\n  return url.startsWith(\"file://\");\r\n}\r\n\r\n\r\nexport function noop() { }\r\n","\r\nimport { ChannelObject, ChannelValue } from \"../../Types\";\r\nimport { Base64 } from 'js-base64';\r\nimport { InstructionMTM } from \"../Instruction\";\r\nimport { Observable, of, Subscriber } from \"rxjs\";\r\nimport { StringObject, ObjectTarget } from \"../../Object/Able/ObjectAble\";\r\nimport { isJS } from \"../../Util/Equipment\";\r\nimport { unpackValue, wrapperValue } from \"../../Util/channel-value-util\";\r\n\r\n//编码\r\nclass Base64EnCodeWork extends InstructionMTM {\r\n  name: string = \"Base64EnCodeWork\";\r\n\r\n  run(input: ChannelObject): Observable<ChannelObject> {\r\n    return new Observable((subscriber: Subscriber<ChannelObject>) => {\r\n      let target: string\r\n      if (input === null || input === undefined) target = ''\r\n      else {\r\n        target = unpackValue(input)\r\n      }\r\n      subscriber.next(wrapperValue(input, Base64.encode(target)))\r\n      subscriber.complete();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS;\r\n  }\r\n}\r\n//解码\r\nclass Base64DecodeWork extends InstructionMTM {\r\n  name: string = \"Base64DecodeWork\";\r\n\r\n  run(input: ChannelObject): Observable<ChannelObject> {\r\n    return new Observable((subscriber: Subscriber<ChannelObject>) => {\r\n      let target: string\r\n      if (input === null || input === undefined) target = ''\r\n      else {\r\n        target = unpackValue(input)\r\n      }\r\n\r\n      subscriber.next(wrapperValue(input, Base64.decode(target)))\r\n      subscriber.complete();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS;\r\n  }\r\n}\r\nexport {\r\n  Base64DecodeWork,\r\n  Base64EnCodeWork\r\n}","import { BaseType, ChannelObject, ChannelValue, WorkType } from \"../../Types\";\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n} from \"rxjs\";\r\nimport { WorkRunOption } from \"../../Configs\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { EnvironmentAble } from \"../../Util/EvalEquipment\";\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { isJS } from \"../../Util/Equipment\";\r\nimport { ObjectTarget } from \"../../Object/Able/ObjectAble\";\r\nimport { decide } from '../../Object/valueUtil'\r\n\r\nexport class BeginWork\r\n  extends InstructionOTO\r\n  implements WorkType.Work, EnvironmentAble, WorkType.WorkEntrance {\r\n  static OPTION: WorkRunOption;\r\n  name: string = \"BeginWork\";\r\n  static _id: number = 0;\r\n  // 输入 头部work\r\n  // inputSubject: Subject<BaseType> = new Subject<BaseType>();\r\n  inputSubscription: Subscription;\r\n  constructor() {\r\n    super();\r\n    this.uuid = UUID();\r\n  }\r\n\r\n  // // 处理上一个的传入\r\n  // _connectChannel() {\r\n  //   const that = this;\r\n  //   // 处理启动指令 仅仅头部work会触发\r\n  //   var sub1: Subscription =\r\n  //     this.inputSubject\r\n  //       .pipe(\r\n  //         take(Infinity)\r\n  //       ).subscribe({\r\n  //         next: (value: BaseType) => that._run(value),\r\n  //         error: (error) => that.error(error),\r\n  //         complete: null,\r\n  //       })\r\n  //   this.inputSubscription = sub1;\r\n  //   this.pools.push(sub1);\r\n  // }\r\n  // _run(input?: BaseType, initOption?: any): void {\r\n  //   // this.nextWork?.next(input);\r\n  //   this.nextWork.next(input);\r\n  // }\r\n  /**\r\n   * 运行 头部\r\n   * @param value\r\n   */\r\n  startRun(value: BaseType, runId?: string) {\r\n    const id = runId ?? UUID();\r\n    (this.nextWork as Subject<ChannelObject>).next(\r\n      new ObjectTarget<ChannelValue>({\r\n        id,\r\n        value: decide(value),\r\n        option: {},\r\n      })\r\n    );\r\n  }\r\n\r\n  completeOneLoop() { }\r\n\r\n  static isAble() {\r\n    return isJS;\r\n  }\r\n\r\n}","import { ContextImpl, Value, } from \"../../Types\";\r\nimport { ChannelObject, ChannelValue } from \"../../Types\";\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { isJS } from \"../../Util/Equipment\";\r\nimport { RequestParamsInit, ResponseContent } from \"../../Bridge/ConfigTypes\";\r\nimport { ObjectTarget } from \"../..\";\r\nimport { AxiosRequestConfig } from \"axios\";\r\nimport { tap } from \"rxjs/operators\";\r\nexport default class FetchWork extends InstructionOTO {\r\n  name: string = \"FetchWork\";\r\n\r\n  _getInitOption(input: Value.ObjectAble<RequestParamsInit>, baseOption?: RequestParamsInit): AxiosRequestConfig {\r\n    const initParams = input.valueOf();\r\n    const { url, method, timeout, data } = initParams;\r\n    const request = {\r\n      url,\r\n      method: initParams.method || baseOption.method || \"GET\",\r\n      timeout: timeout || baseOption.timeout || 10000,\r\n      headers: {\r\n        ...(baseOption.headers || {}),\r\n        ...(initParams.headers || {}),\r\n      },\r\n    } as AxiosRequestConfig\r\n    request.data = data;\r\n    if (method.toLocaleUpperCase() === \"GET\") {\r\n      request.headers['Content-Type'] = request.headers['Content-Type'] || 'application/json';\r\n    }\r\n    request.timeoutErrorMessage = '请求超时';\r\n    return request;\r\n  }\r\n  run(input: ChannelObject<Value.ObjectAble<RequestParamsInit>>, baseOption?: RequestParamsInit): Observable<ChannelObject<Value.ObjectAble<any>>> {\r\n    const that = this;\r\n    const options = this._getInitOption(input._value.value, baseOption);\r\n    return new Observable((subscriber: Subscriber<ChannelObject<Value.ObjectAble<any>>>) => {\r\n      const fetchSub = (that.context as ContextImpl).platform.fetch(options as AxiosRequestConfig)\r\n        .pipe(\r\n          tap((result: Value.ObjectAble<ResponseContent>) => {\r\n            const { data } = result.valueOf();\r\n            this.logMsg(`[FetchWork][load:data]${data}`, input);\r\n          })\r\n        ).subscribe({\r\n          next: (data: Value.ObjectAble<ResponseContent>) => {\r\n            const result: ResponseContent = data.valueOf();\r\n            if (result.error) {\r\n              subscriber.error(result.error);\r\n            } else {\r\n              subscriber.next(new ObjectTarget({\r\n                ...input._value,\r\n                value: result.data,\r\n              }));\r\n              subscriber.complete();\r\n            }\r\n          },\r\n          error: (error: Error) => subscriber.error(error),\r\n          complete: () => subscriber.complete(),\r\n        })\r\n      return {\r\n        unsubscribe: () => {\r\n          subscriber.unsubscribe();\r\n          fetchSub.unsubscribe()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  static isAble() {\r\n    return isJS\r\n  }\r\n}\r\n","import { ContextImpl } from \"../../Types\";\r\nimport { ChannelObject, ChannelValue } from \"../../Types\";\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport {\r\n  DataObject,\r\n  ObjectTarget,\r\n} from \"../../Object/Able/ObjectAble\";\r\nimport { isElectron, isJS, isMobile, isNode, isPC, isWeb } from \"../../Util/Equipment\";\r\nimport { FileLoadEvent, FileOption, FileType } from \"../../Bridge/ConfigTypes\";\r\nimport { takeLast, tap } from \"rxjs/operators\";\r\nimport { unpackValue } from \"../../Util/channel-value-util\";\r\n\r\nexport default class LoadFileWork extends InstructionOTO {\r\n  name: string = \"LoadFileWork\";\r\n  currentConfig: FileOption = { type: FileType.All };\r\n  constructor(config?: FileOption) {\r\n    super();\r\n    this.currentConfig = config || { type: FileType.All };\r\n  }\r\n\r\n  run(input: ChannelObject, option?: FileOption): Observable<ChannelObject<DataObject>> {\r\n    const that = this;\r\n    const runOption = { ...(option), ...(this.currentConfig) }\r\n    return new Observable((subscriber: Subscriber<ChannelObject<DataObject>>) => {\r\n      const target = unpackValue(input);\r\n      const sub = (that.context as ContextImpl).platform\r\n        .loadFile(target, runOption)\r\n        .pipe(\r\n          tap((obj: ObjectTarget<FileLoadEvent>) => {\r\n            const { loaded, total, finish } = obj.valueOf();\r\n            this.logMsg(`加载进度[load:progress]---：${loaded}/${total} 是否完成：${finish}`, input);\r\n          }),\r\n          takeLast(1)\r\n        )\r\n        .subscribe({\r\n          next: (obj: ObjectTarget<FileLoadEvent>) => {\r\n            const { data, file } = obj.valueOf();\r\n            subscriber.next(new ObjectTarget({\r\n              ...input._value,\r\n              value: new DataObject(data),\r\n              option: { file }\r\n            }));\r\n            subscriber.complete();\r\n          },\r\n          complete: () => subscriber.complete(),\r\n          error: (err) => subscriber.error(err),\r\n        });\r\n      return {\r\n        unsubscribe: () => {\r\n          sub.unsubscribe();\r\n          subscriber.unsubscribe();\r\n        },\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS;\r\n  }\r\n}\r\n","\r\nimport { ContextImpl } from \"../../Types\";\r\nimport { ChannelObject } from \"../../Types\";\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { BooleanObject } from \"../../Object/Able/ObjectAble\";\r\nimport { isJS, } from \"../../Util/Equipment\";\r\nimport { unpackValue, wrapperValue } from \"../../Util/channel-value-util\";\r\n\r\n/**\r\n * 打开路径\r\n * http://www.baidu.com\r\n * node window: file:///C:/Users/Administrator    file:///C:/Users/Administrator/Desktop/116513f379bd664b7cfe5b3b40f5737d.jpg\r\n * \r\n * node:可以打开文件 网页\r\n * web:只能代开网页\r\n */\r\nexport default class OpenURLWork extends InstructionOTO {\r\n  name: string = \"OpenURLWork\";\r\n  run(input: ChannelObject, option?: any): Observable<ChannelObject<BooleanObject>> {\r\n    const that = this;\r\n    return new Observable((subscriber: Subscriber<ChannelObject<BooleanObject>>) => {\r\n      const target: string = unpackValue(input);\r\n      const sub = (that.context as ContextImpl).platform\r\n        .open(target, option)\r\n        .subscribe({\r\n          next: _ => subscriber.next(wrapperValue(input, new BooleanObject(true))),\r\n          complete: () => subscriber.complete(),\r\n          error: (err) => subscriber.error(err)\r\n        });\r\n      return {\r\n        unsubscribe: () => {\r\n          sub.unsubscribe();\r\n          subscriber.unsubscribe();\r\n        },\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS\r\n  }\r\n}\r\n","import { BaseType, ChannelObject, ChannelValue, ContextImpl, Value } from \"../../Types\";\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { isJS } from \"../../Util/Equipment\";\r\nimport { QRcodeOption } from \"../../Bridge/ConfigTypes\";\r\nimport { unpackValue, wrapperValue } from \"../../Util/channel-value-util\";\r\n\r\n/**\r\n * 字符串生产QRcode base64\r\n * input => StringObject\r\n * output => StringObject\r\n */\r\nclass QRCodeWork extends InstructionOTO {\r\n  name: string = \"QRCodeWork\";\r\n  run(input: ChannelObject, option?: QRcodeOption): Observable<ChannelObject<Value.StringAble>> {\r\n    const that = this;\r\n    return new Observable((subscriber: Subscriber<ChannelObject<Value.StringAble>>) => {\r\n      let target: string;\r\n      if (input === null || input === undefined) target = \"\";\r\n      else {\r\n        target = unpackValue(input)\r\n      }\r\n      const sub = (that.context as ContextImpl).platform\r\n        .createQrCode(target, option)\r\n        .subscribe({\r\n          next: (res) => subscriber.next(wrapperValue(input, res)),\r\n          complete: () => subscriber.complete(),\r\n          error: (err) => subscriber.error(err),\r\n        });\r\n      return {\r\n        unsubscribe: () => {\r\n          sub.unsubscribe();\r\n          subscriber.unsubscribe();\r\n        },\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS;\r\n    // return isNode || isWeb || isRN\r\n  }\r\n}\r\n\r\nexport { QRCodeWork };\r\n","\r\n\r\nimport { InstructionOTO } from \"../Instruction\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { isJS } from \"../../Util/Equipment\";\r\nimport { CommandStatus } from \"../../Bridge/ConfigTypes\";\r\nimport { ChannelObject, ContextImpl } from \"../../Types\";\r\nimport { BooleanObject } from '../../Object/Able/ObjectAble';\r\nimport { unpackValue, wrapperValue } from \"../../Util/channel-value-util\";\r\nimport { RunCommandWorkConfig } from \"../../Configs\";\r\n\r\n\r\n/**\r\n * \"1 + $I$ \"\r\n * @param template \r\n * @param input \r\n * @param option \r\n * @returns \r\n */\r\nfunction handleEvalCommand(template: string, input: string, option: RunCommandWorkConfig): string {\r\n  const inputKey = option.input;\r\n  const command = template.replace(inputKey, input);\r\n  return command;\r\n}\r\n\r\n/**\r\n * 默认：\r\n * run javascript \r\n * \r\n * node:指定\r\n *  = \"#javascript#console.log('hello world')\"\r\n *  = \"#shell#echo hello world\"\r\n */\r\nexport default class RunCommandWork extends InstructionOTO {\r\n  template: string = '';\r\n  constructor(template: string = '$I$') {\r\n    super();\r\n    this.template = template;\r\n  }\r\n  name: string = \"RunCommandWork\";\r\n  run(command: ChannelObject, option?: RunCommandWorkConfig): Observable<ChannelObject<BooleanObject>> {\r\n    const that = this;\r\n    return new Observable((subscriber: Subscriber<ChannelObject<BooleanObject>>) => {\r\n      const target: string = handleEvalCommand(that.template, unpackValue(command), option)\r\n      const sub = (that.context as ContextImpl).platform\r\n        .runCommand(target)\r\n        .subscribe({\r\n          next: (info: CommandStatus) => {\r\n            this.logMsg(`执行command：${info.error ? '失败' : '成功'}。结果：${info.result}`, command);\r\n            subscriber.next(wrapperValue(command, info.error ? undefined : info.result))\r\n          },\r\n          complete: () => subscriber.complete(),\r\n          error: (err) => subscriber.error(err)\r\n        });\r\n      return {\r\n        unsubscribe: () => {\r\n          sub.unsubscribe();\r\n          subscriber.unsubscribe();\r\n        },\r\n      };\r\n    });\r\n  }\r\n  static isAble() {\r\n    return isJS\r\n    // return isNode || isWeb || isRN || isElectron\r\n  }\r\n}\r\n","import { Observable, interval, asyncScheduler, timer, NEVER } from \"rxjs\"\r\nimport { takeUntil, take } from \"rxjs/operators\"\r\nimport { BaseType, NumberObject, ObjectTarget } from \"../..\"\r\nimport { ChannelObject } from \"../../Types\";\r\nimport { unpackValue, wrapperValue } from \"../../Util/channel-value-util\";\r\nimport { InstructionOTM, InstructionOTO } from \"../Instruction\"\r\n\r\n// 一直发\r\nclass IntervalWork extends InstructionOTM {\r\n  name = \"IntervalWork\"\r\n  intervalTime: number;\r\n  maxCount: number;\r\n  notifier: Observable<any>;\r\n  constructor(interval: number, max: number = Infinity, notifier?: Observable<any>) {\r\n    super()\r\n    this.intervalTime = interval || 1000;\r\n    this.maxCount = max;\r\n    this.notifier = notifier || NEVER;\r\n  }\r\n\r\n  run(input: ChannelObject): Observable<ChannelObject<NumberObject>> {\r\n    const intervalTime = parseInt(unpackValue(input)) || this.intervalTime || 1000;\r\n    const that = this;\r\n    return new Observable(observer => {\r\n      const sub = interval(intervalTime, asyncScheduler).pipe(\r\n        take(that.maxCount),\r\n        takeUntil(this.notifier),\r\n      ).subscribe({\r\n        next: (value) => observer.next(wrapperValue(input, new NumberObject(value))),\r\n        error: (error) => observer.error(error),\r\n        complete: () => observer.complete()\r\n      })\r\n      return {\r\n        unsubscribe: () => {\r\n          observer.unsubscribe()\r\n          sub.unsubscribe()\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// 定时发\r\nclass TimeoutWork extends InstructionOTO {\r\n  name = \"TimeoutWork\"\r\n  intervalTime: number;\r\n  constructor(interval: number,) {\r\n    super()\r\n    this.intervalTime = interval || 1000;\r\n  }\r\n  run(input: ChannelObject): Observable<ChannelObject<NumberObject>> {\r\n    const intervalTime = parseInt(unpackValue(input)) || this.intervalTime || 1000;\r\n    const that = this;\r\n\r\n    return new Observable(observer => {\r\n      const sub = interval(intervalTime, asyncScheduler)\r\n        .pipe(\r\n          take(1)\r\n        ).subscribe({\r\n          next: (value) => {\r\n            observer.next(wrapperValue(input, new NumberObject(value)))\r\n          },\r\n          error: (error) => observer.error(error),\r\n          complete: () => observer.complete()\r\n        })\r\n      return {\r\n        unsubscribe: () => {\r\n          observer.unsubscribe()\r\n          sub.unsubscribe()\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n// 延迟 然后一直发\r\nclass DelayIntervalWork extends InstructionOTM {\r\n  name = 'DelayIntervalWork'\r\n  intervalTime: number;\r\n  maxCount: number;\r\n  delayTime: number;\r\n  notifier: Observable<any>;\r\n  constructor(delay: number = 0, interval: number = 1000, max: number = Infinity, notifier?: Observable<any>) {\r\n    super()\r\n    this.intervalTime = interval || 1000;\r\n    this.maxCount = max;\r\n    this.delayTime = delay || 0;\r\n    this.notifier = notifier || NEVER;\r\n  }\r\n\r\n  run(input: ChannelObject): Observable<ChannelObject<NumberObject>> {\r\n    const intervalTime = parseInt(unpackValue(input)) || this.intervalTime || 1000;\r\n    const that = this;\r\n    return new Observable(observer => {\r\n      const sub = timer(that.delayTime, intervalTime, asyncScheduler)\r\n        .pipe(\r\n          take(that.maxCount),\r\n          takeUntil(this.notifier),\r\n        )\r\n        .subscribe({\r\n          next: (value) => observer.next(wrapperValue(input, new NumberObject(value))),\r\n          error: (error) => observer.error(error),\r\n          complete: () => observer.complete()\r\n        })\r\n      return {\r\n        unsubscribe: () => {\r\n          observer.unsubscribe()\r\n          sub.unsubscribe()\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n\r\nexport {\r\n  IntervalWork,\r\n  TimeoutWork,\r\n  DelayIntervalWork\r\n}","import { BaseType, ContextImpl, WorkType, Value, ChannelObject, ChannelValue } from \"../Types\";\r\nimport {\r\n  Subject,\r\n  Subscription,\r\n  Observable,\r\n  PartialObserver,\r\n  Subscriber,\r\n  asyncScheduler,\r\n} from \"rxjs\";\r\nimport {\r\n  isJS,\r\n  PlatformSelect,\r\n} from \"../Util/Equipment\";\r\nimport { ContextRunOption, WorkRunOption } from \"../Configs\";\r\nimport { observeOn, tap } from \"rxjs/operators\";\r\nimport { v4 as UUID } from \"uuid\";\r\nimport { WorkUnit } from \"./WorkUnit\";\r\nimport { EnvironmentAble } from \"../Util/EvalEquipment\";\r\nimport { StringObject } from \"../Object/Able/ObjectAble\";\r\nimport { wrapperValue } from \"../Util/channel-value-util\";\r\nimport { noop } from \"../Util/tools\";\r\n\r\n/**\r\n * 一次输入--->一次输出 InstructionOTO\r\n * 一次输入--->多次输出 InstructionOTM\r\n * n次输入---->m次输出 InstructionMTM\r\n */\r\nexport class Instruction\r\n  extends Subject<ChannelObject>\r\n  implements WorkType.Work, EnvironmentAble {\r\n  name: string = \"Instruction\";\r\n  static _id: number = 0;\r\n  id: number = Instruction._id++;\r\n  uuid: WorkType.WorkUUID;\r\n  beforeWork?: WorkType.Work;\r\n  nextWork?: WorkType.Work;\r\n  context: ContextImpl;\r\n  runSubscriptions: Map<string, WorkUnit> = new Map();\r\n  pools: Subscription[] = [];// 订阅自己的\r\n  // 运行配置 config:OPTION todo\r\n  config: ContextRunOption = { development: true };\r\n  constructor() {\r\n    super();\r\n    this.uuid = UUID();\r\n  }\r\n  // 连接上下通道\r\n  prepare(before?: WorkType.Work, next?: WorkType.Work): Promise<void> {\r\n    this.beforeWork = before;\r\n    this.nextWork = next;\r\n    this.config = this.context?.runOptions || {} as ContextRunOption;\r\n    this._connectChannel();\r\n    return Promise.resolve();\r\n  }\r\n\r\n  // 处理上一个的传入\r\n  _connectChannel() {\r\n    const that = this;\r\n    // // 处理数据\r\n    const sub2: Subscription = this\r\n      .pipe(\r\n        tap((value) => {\r\n          this.config?.development &&\r\n            that.context?.sendLog({\r\n              work: [that],\r\n              content: this.context,\r\n              desc: \"[Work:preRun]->接受到数据\",\r\n              value: value,\r\n            });\r\n        })\r\n      )\r\n      .subscribe({\r\n        complete: () => { },\r\n        error: (error) => that.error(error),\r\n        next: (value: BaseType) => that._run(value as ChannelObject),\r\n      });\r\n    this.pools.push(sub2);\r\n  }\r\n\r\n  _run(value: ChannelObject) {\r\n    const sendLog = (desc: string, _value?: ChannelObject, _error?: Error) => {\r\n      that.config?.development &&\r\n        that.context?.sendLog({\r\n          work: [that],\r\n          content: this.context,\r\n          desc: desc,\r\n          value: _value || value,\r\n          error: _error,\r\n        });\r\n    }\r\n    value = this.nextValue(value) || value;\r\n    const that = this;\r\n    const nextOption = (this.config?.workConfig || {})[this.name] || {};\r\n    const execFunc: WorkType.WorkFunction = PlatformSelect({\r\n      web: () =>\r\n        ((that as WorkType.Work).web_run ?? ((that as WorkType.Work).run || noop)).bind(\r\n          that\r\n        )(value, nextOption),\r\n      node: () =>\r\n        ((that as WorkType.Work).node_run ?? ((that as WorkType.Work).run || noop)).bind(\r\n          that\r\n        )(value, nextOption),\r\n      electron: () =>\r\n        ((that as WorkType.Work).electron_run ?? ((that as WorkType.Work).run || noop)).bind(\r\n          that\r\n        )(value, nextOption),\r\n      other: () =>\r\n        (((that as WorkType.Work).run || noop)).bind(\r\n          that\r\n        )(value, nextOption)\r\n    });\r\n    sendLog(\"[Work][Func:run]->入口\", value);\r\n    const uuid = UUID();\r\n    const runSub: Subscription = execFunc(value)\r\n      .pipe(\r\n        tap(function(_value:ChannelObject){\r\n          sendLog(\"[Work][Func:run]->结果\", _value)\r\n        }),\r\n        observeOn(asyncScheduler)\r\n      )\r\n      .subscribe({\r\n        complete: () => {\r\n          const unit = that.runSubscriptions.get(uuid);\r\n          unit?.sub.unsubscribe();\r\n          that.runSubscriptions.delete(uuid);\r\n        },\r\n        error: (err) => {\r\n          sendLog(\"[Work][Func:run]->执行错误\", value, err);\r\n          that.completeOneLoop(value, null, false);\r\n        },\r\n        next: (res) => {\r\n          sendLog(\"[Work][Func:run]->将执行下一个Work\", res);\r\n          that.completeOneLoop(value, res as BaseType, true);\r\n          that.nextWork?.next(res as BaseType);\r\n        },\r\n      });\r\n    const unit = new WorkUnit(that.context, that, runSub, uuid);\r\n    this.runSubscriptions.set(unit.uuid, unit);\r\n\r\n  }\r\n\r\n  stopWork(): Observable<Boolean> {\r\n    const that = this\r\n    return new Observable<Boolean>((subscribe: Subscriber<Boolean>) => {\r\n      that.runSubscriptions.forEach((value) => {\r\n        value?.sub.unsubscribe();\r\n      });\r\n      subscribe.next(true);\r\n      subscribe.complete();\r\n      return {\r\n        unsubscribe: () => subscribe.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n  clear(): void {\r\n    this.pools && this.pools.forEach(($1) => $1.unsubscribe());\r\n    this.pools.length = 0;\r\n    this.unsubscribe();\r\n  }\r\n\r\n  error(err: Error): void {\r\n    this.context &&\r\n      this.context.sendLog({\r\n        work: [this],\r\n        content: this.context,\r\n        desc: \"[Work:preRun]-接受上一个消息错误\",\r\n        date: new Date(),\r\n        value: new StringObject(err.message),\r\n      });\r\n  }\r\n  addVariable(name: string, value: BaseType): void {\r\n    this.context && this.context.addVariable(this, name, value);\r\n  }\r\n  logMsg(msg: string, input: ChannelObject): void {\r\n    this.config?.development &&\r\n      this.context?.sendLog({\r\n        work: [this],\r\n        content: this.context,\r\n        desc: msg,\r\n        value: wrapperValue(input, null),\r\n      });\r\n  }\r\n\r\n  //重写\r\n  next(value: ChannelObject) {\r\n    if (this.closed === false) {\r\n      super.next(value);\r\n    } else {\r\n      this.context.sendLog({\r\n        work: [this],\r\n        content: this.context,\r\n        desc: this.toString() + \" 已经关闭\",\r\n        value: wrapperValue(value, null),\r\n      })\r\n    }\r\n  }\r\n  // 声明周期\r\n  // 处理输入的值\r\n  nextValue(input: ChannelObject): ChannelObject { return input }\r\n  completeOneLoop(input: BaseType, toValue: BaseType, success: Boolean) { }\r\n\r\n  // 基础\r\n  toString() {\r\n    return `[${this.name}:${this.id}]`;\r\n  }\r\n  isAble(): Boolean {\r\n    return (this as any).__proto__.isAble();\r\n  }\r\n\r\n  static isAble() {\r\n    return isJS;\r\n  }\r\n}\r\n\r\nexport class InstructionOTO extends Instruction {\r\n  nextValue(input: ChannelObject): ChannelObject {\r\n    return input;\r\n  }\r\n  completeOneLoop(input: ChannelObject, toValue: ChannelObject, success: Boolean) { }\r\n  run(input: ChannelObject): Observable<ChannelObject> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next(input);\r\n      subscriber.complete();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nexport class InstructionOTM extends Instruction {\r\n  // 声明可以进行配置的属性 todo\r\n  static OPTION: WorkRunOption;\r\n  name: string = \"MultipleInstruction\";\r\n  nextValue(input: ChannelObject): ChannelObject { return input }\r\n  completeOneLoop(input: ChannelObject, next: ChannelObject, success: Boolean) { }\r\n  run(input: ChannelObject): Observable<ChannelObject> {\r\n    return new Observable((subscriber) => {\r\n      // subscriber.next(input);\r\n      // 输出多次\r\n      subscriber.next(input);\r\n      subscriber.complete();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n}\r\n\r\nexport class InstructionMTM extends Instruction {\r\n  // 声明可以进行配置的属性 todo\r\n  static OPTION: WorkRunOption;\r\n  name: string = \"MultipleInstruction\";\r\n\r\n  nextValue(input: ChannelObject): ChannelObject { return input }\r\n  completeOneLoop(input: ChannelObject, next: ChannelObject, success: Boolean) { }\r\n\r\n  run(input: ChannelObject): Observable<ChannelObject> {\r\n    return new Observable((subscriber) => {\r\n      // subscriber.next(input);\r\n      // 输出多次\r\n      subscriber.next(input);\r\n      subscriber.complete();\r\n      return {\r\n        unsubscribe: () => subscriber.unsubscribe(),\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Subscription } from \"rxjs\";\r\nimport { ContextImpl, WorkType } from \"../Types\";\r\nimport { v4 as UUID } from \"uuid\";\r\n\r\nexport class WorkUnit implements WorkType.WorkUnitImpl {\r\n  context: ContextImpl;\r\n  work: WorkType.Work;\r\n  uuid: string;\r\n  sub: Subscription;\r\n  constructor(\r\n    context: ContextImpl,\r\n    work: WorkType.Work,\r\n    sub: Subscription,\r\n    uuid?: string\r\n  ) {\r\n    this.context = context;\r\n    this.work = work;\r\n    this.sub = sub;\r\n    this.uuid = uuid ?? UUID();\r\n  }\r\n}\r\n","import {\r\n  ObjectTarget,\r\n  ArrayObject,\r\n  MapObject,\r\n  SetObject,\r\n  NumberObject,\r\n  StringObject,\r\n  BooleanObject,\r\n  DateObject,\r\n  DataObject,\r\n  OptionalObject\r\n} from \"./Object/Able/ObjectAble\";\r\nimport { Value, ContextImpl, BaseType, WorkType } from \"./Types\";\r\nimport { ControlFlow } from \"./Object/Control\";\r\nimport { Context } from \"./Context\";\r\nimport {\r\n  InstructionMTM,\r\n  InstructionOTM,\r\n  InstructionOTO,\r\n} from \"./Works/Instruction\";\r\nimport {\r\n  Base64DecodeWork,\r\n  Base64EnCodeWork,\r\n} from \"./Works/ExtendsWorks/Base64Work\";\r\nimport LoadFileWork from \"./Works/ExtendsWorks/LoadFileWork\";\r\nimport OpenURLWork from \"./Works/ExtendsWorks/OpenURLWork\";\r\nimport { QRCodeWork } from \"./Works/ExtendsWorks/QRCodeWork\";\r\nimport FetchWork from \"./Works/ExtendsWorks/FetchWork\";\r\nimport RunCommandWork from './Works/ExtendsWorks/RunCommandWork'\r\nimport { IntervalWork, TimeoutWork, DelayIntervalWork } from \"./Works/ExtendsWorks/UtilWork\";\r\nimport { unpackValue, wrapperValue } from './Util/channel-value-util'\r\nimport { isAbleType, decide } from './Object/valueUtil'\r\n\r\nexport {\r\n  ObjectTarget,\r\n  ArrayObject,\r\n  MapObject,\r\n  SetObject,\r\n  NumberObject,\r\n  StringObject,\r\n  BooleanObject,\r\n  DateObject,\r\n  DataObject,\r\n  OptionalObject,\r\n  ContextImpl,\r\n  Context,\r\n  Value,\r\n  BaseType,\r\n  WorkType,\r\n  ControlFlow,\r\n  InstructionMTM,\r\n  InstructionOTM,\r\n  InstructionOTO,\r\n  Base64DecodeWork,\r\n  Base64EnCodeWork,\r\n  LoadFileWork,\r\n  OpenURLWork,\r\n  QRCodeWork,\r\n  RunCommandWork,\r\n  IntervalWork,\r\n  TimeoutWork,\r\n  DelayIntervalWork,\r\n  FetchWork,\r\n  unpackValue,\r\n  wrapperValue,\r\n  isAbleType, decide\r\n};\r\n\r\n// 1","module.exports = __WEBPACK_EXTERNAL_MODULE_axios__;","module.exports = __WEBPACK_EXTERNAL_MODULE_js_base64__;","module.exports = __WEBPACK_EXTERNAL_MODULE_qrcode_generator__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs__;","module.exports = __WEBPACK_EXTERNAL_MODULE_rxjs_operators__;","module.exports = __WEBPACK_EXTERNAL_MODULE_uuid__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}